
8segment indicator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000f5e  00000fd2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f5e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000fe6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001018  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00001058  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ac4  00000000  00000000  00001078  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000067c  00000000  00000000  00001b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005cc  00000000  00000000  000021b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  00002784  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c0  00000000  00000000  000027c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000062  00000000  00000000  00002b84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00002be6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  8e:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:

int seq[10] = {0b10100000, 0b10111011, 0b01100010, 0b00101010, 0b00111001, 0b00101100, 0b00100100, 0b10111010, 0b00100000, 0b00101000};


int main(void)
{
  96:	0f 93       	push	r16
  98:	1f 93       	push	r17
  9a:	cf 93       	push	r28
  9c:	df 93       	push	r29
  9e:	cd b7       	in	r28, 0x3d	; 61
  a0:	de b7       	in	r29, 0x3e	; 62
  a2:	ce 57       	subi	r28, 0x7E	; 126
  a4:	d1 09       	sbc	r29, r1
  a6:	0f b6       	in	r0, 0x3f	; 63
  a8:	f8 94       	cli
  aa:	de bf       	out	0x3e, r29	; 62
  ac:	0f be       	out	0x3f, r0	; 63
  ae:	cd bf       	out	0x3d, r28	; 61
    DDRB = 0xFF;
  b0:	84 e2       	ldi	r24, 0x24	; 36
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	2f ef       	ldi	r18, 0xFF	; 255
  b6:	fc 01       	movw	r30, r24
  b8:	20 83       	st	Z, r18
	DDRD = 0xFF;
  ba:	8a e2       	ldi	r24, 0x2A	; 42
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	fc 01       	movw	r30, r24
  c2:	20 83       	st	Z, r18
	/* Replace with your application code */
    while (1) 
    { 
	
	PORTD = seq[0];
  c4:	8b e2       	ldi	r24, 0x2B	; 43
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
  cc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
  d0:	fc 01       	movw	r30, r24
  d2:	20 83       	st	Z, r18
	PORTB = 1; 
  d4:	85 e2       	ldi	r24, 0x25	; 37
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	21 e0       	ldi	r18, 0x01	; 1
  da:	fc 01       	movw	r30, r24
  dc:	20 83       	st	Z, r18
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	aa e7       	ldi	r26, 0x7A	; 122
  e4:	b4 e4       	ldi	r27, 0x44	; 68
  e6:	89 83       	std	Y+1, r24	; 0x01
  e8:	9a 83       	std	Y+2, r25	; 0x02
  ea:	ab 83       	std	Y+3, r26	; 0x03
  ec:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
  ee:	8e 01       	movw	r16, r28
  f0:	0b 58       	subi	r16, 0x8B	; 139
  f2:	1f 4f       	sbci	r17, 0xFF	; 255
  f4:	20 e0       	ldi	r18, 0x00	; 0
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	4a e7       	ldi	r20, 0x7A	; 122
  fa:	55 e4       	ldi	r21, 0x45	; 69
  fc:	69 81       	ldd	r22, Y+1	; 0x01
  fe:	7a 81       	ldd	r23, Y+2	; 0x02
 100:	8b 81       	ldd	r24, Y+3	; 0x03
 102:	9c 81       	ldd	r25, Y+4	; 0x04
 104:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 108:	dc 01       	movw	r26, r24
 10a:	cb 01       	movw	r24, r22
 10c:	f8 01       	movw	r30, r16
 10e:	80 83       	st	Z, r24
 110:	91 83       	std	Z+1, r25	; 0x01
 112:	a2 83       	std	Z+2, r26	; 0x02
 114:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 116:	ce 01       	movw	r24, r28
 118:	8b 58       	subi	r24, 0x8B	; 139
 11a:	9f 4f       	sbci	r25, 0xFF	; 255
 11c:	20 e0       	ldi	r18, 0x00	; 0
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	40 e8       	ldi	r20, 0x80	; 128
 122:	5f e3       	ldi	r21, 0x3F	; 63
 124:	fc 01       	movw	r30, r24
 126:	60 81       	ld	r22, Z
 128:	71 81       	ldd	r23, Z+1	; 0x01
 12a:	82 81       	ldd	r24, Z+2	; 0x02
 12c:	93 81       	ldd	r25, Z+3	; 0x03
 12e:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
 132:	88 23       	and	r24, r24
 134:	4c f4       	brge	.+18     	; 0x148 <main+0xb2>
		__ticks = 1;
 136:	ce 01       	movw	r24, r28
 138:	87 58       	subi	r24, 0x87	; 135
 13a:	9f 4f       	sbci	r25, 0xFF	; 255
 13c:	21 e0       	ldi	r18, 0x01	; 1
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	fc 01       	movw	r30, r24
 142:	31 83       	std	Z+1, r19	; 0x01
 144:	20 83       	st	Z, r18
 146:	69 c0       	rjmp	.+210    	; 0x21a <main+0x184>
	else if (__tmp > 65535)
 148:	ce 01       	movw	r24, r28
 14a:	8b 58       	subi	r24, 0x8B	; 139
 14c:	9f 4f       	sbci	r25, 0xFF	; 255
 14e:	20 e0       	ldi	r18, 0x00	; 0
 150:	3f ef       	ldi	r19, 0xFF	; 255
 152:	4f e7       	ldi	r20, 0x7F	; 127
 154:	57 e4       	ldi	r21, 0x47	; 71
 156:	fc 01       	movw	r30, r24
 158:	60 81       	ld	r22, Z
 15a:	71 81       	ldd	r23, Z+1	; 0x01
 15c:	82 81       	ldd	r24, Z+2	; 0x02
 15e:	93 81       	ldd	r25, Z+3	; 0x03
 160:	0e 94 13 07 	call	0xe26	; 0xe26 <__gesf2>
 164:	18 16       	cp	r1, r24
 166:	0c f0       	brlt	.+2      	; 0x16a <main+0xd4>
 168:	46 c0       	rjmp	.+140    	; 0x1f6 <main+0x160>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 16a:	20 e0       	ldi	r18, 0x00	; 0
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	40 e2       	ldi	r20, 0x20	; 32
 170:	51 e4       	ldi	r21, 0x41	; 65
 172:	69 81       	ldd	r22, Y+1	; 0x01
 174:	7a 81       	ldd	r23, Y+2	; 0x02
 176:	8b 81       	ldd	r24, Y+3	; 0x03
 178:	9c 81       	ldd	r25, Y+4	; 0x04
 17a:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 17e:	dc 01       	movw	r26, r24
 180:	cb 01       	movw	r24, r22
 182:	8e 01       	movw	r16, r28
 184:	07 58       	subi	r16, 0x87	; 135
 186:	1f 4f       	sbci	r17, 0xFF	; 255
 188:	bc 01       	movw	r22, r24
 18a:	cd 01       	movw	r24, r26
 18c:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 190:	dc 01       	movw	r26, r24
 192:	cb 01       	movw	r24, r22
 194:	f8 01       	movw	r30, r16
 196:	91 83       	std	Z+1, r25	; 0x01
 198:	80 83       	st	Z, r24
		while(__ticks)
 19a:	ce 01       	movw	r24, r28
 19c:	87 58       	subi	r24, 0x87	; 135
 19e:	9f 4f       	sbci	r25, 0xFF	; 255
 1a0:	fc 01       	movw	r30, r24
 1a2:	80 81       	ld	r24, Z
 1a4:	91 81       	ldd	r25, Z+1	; 0x01
 1a6:	89 2b       	or	r24, r25
 1a8:	09 f4       	brne	.+2      	; 0x1ac <main+0x116>
 1aa:	51 c0       	rjmp	.+162    	; 0x24e <main+0x1b8>
 1ac:	ce 01       	movw	r24, r28
 1ae:	85 58       	subi	r24, 0x85	; 133
 1b0:	9f 4f       	sbci	r25, 0xFF	; 255
 1b2:	20 e9       	ldi	r18, 0x90	; 144
 1b4:	31 e0       	ldi	r19, 0x01	; 1
 1b6:	fc 01       	movw	r30, r24
 1b8:	31 83       	std	Z+1, r19	; 0x01
 1ba:	20 83       	st	Z, r18
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 1bc:	ce 01       	movw	r24, r28
 1be:	85 58       	subi	r24, 0x85	; 133
 1c0:	9f 4f       	sbci	r25, 0xFF	; 255
 1c2:	fc 01       	movw	r30, r24
 1c4:	80 81       	ld	r24, Z
 1c6:	91 81       	ldd	r25, Z+1	; 0x01
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <main+0x132>
 1cc:	9e 01       	movw	r18, r28
 1ce:	25 58       	subi	r18, 0x85	; 133
 1d0:	3f 4f       	sbci	r19, 0xFF	; 255
 1d2:	f9 01       	movw	r30, r18
 1d4:	91 83       	std	Z+1, r25	; 0x01
 1d6:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1d8:	ce 01       	movw	r24, r28
 1da:	87 58       	subi	r24, 0x87	; 135
 1dc:	9f 4f       	sbci	r25, 0xFF	; 255
 1de:	9e 01       	movw	r18, r28
 1e0:	27 58       	subi	r18, 0x87	; 135
 1e2:	3f 4f       	sbci	r19, 0xFF	; 255
 1e4:	f9 01       	movw	r30, r18
 1e6:	20 81       	ld	r18, Z
 1e8:	31 81       	ldd	r19, Z+1	; 0x01
 1ea:	21 50       	subi	r18, 0x01	; 1
 1ec:	31 09       	sbc	r19, r1
 1ee:	fc 01       	movw	r30, r24
 1f0:	31 83       	std	Z+1, r19	; 0x01
 1f2:	20 83       	st	Z, r18
 1f4:	d2 cf       	rjmp	.-92     	; 0x19a <main+0x104>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1f6:	8e 01       	movw	r16, r28
 1f8:	07 58       	subi	r16, 0x87	; 135
 1fa:	1f 4f       	sbci	r17, 0xFF	; 255
 1fc:	ce 01       	movw	r24, r28
 1fe:	8b 58       	subi	r24, 0x8B	; 139
 200:	9f 4f       	sbci	r25, 0xFF	; 255
 202:	fc 01       	movw	r30, r24
 204:	60 81       	ld	r22, Z
 206:	71 81       	ldd	r23, Z+1	; 0x01
 208:	82 81       	ldd	r24, Z+2	; 0x02
 20a:	93 81       	ldd	r25, Z+3	; 0x03
 20c:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 210:	dc 01       	movw	r26, r24
 212:	cb 01       	movw	r24, r22
 214:	f8 01       	movw	r30, r16
 216:	91 83       	std	Z+1, r25	; 0x01
 218:	80 83       	st	Z, r24
 21a:	ce 01       	movw	r24, r28
 21c:	83 58       	subi	r24, 0x83	; 131
 21e:	9f 4f       	sbci	r25, 0xFF	; 255
 220:	9e 01       	movw	r18, r28
 222:	27 58       	subi	r18, 0x87	; 135
 224:	3f 4f       	sbci	r19, 0xFF	; 255
 226:	f9 01       	movw	r30, r18
 228:	20 81       	ld	r18, Z
 22a:	31 81       	ldd	r19, Z+1	; 0x01
 22c:	fc 01       	movw	r30, r24
 22e:	31 83       	std	Z+1, r19	; 0x01
 230:	20 83       	st	Z, r18
 232:	ce 01       	movw	r24, r28
 234:	83 58       	subi	r24, 0x83	; 131
 236:	9f 4f       	sbci	r25, 0xFF	; 255
 238:	fc 01       	movw	r30, r24
 23a:	80 81       	ld	r24, Z
 23c:	91 81       	ldd	r25, Z+1	; 0x01
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <main+0x1a8>
 242:	9e 01       	movw	r18, r28
 244:	23 58       	subi	r18, 0x83	; 131
 246:	3f 4f       	sbci	r19, 0xFF	; 255
 248:	f9 01       	movw	r30, r18
 24a:	91 83       	std	Z+1, r25	; 0x01
 24c:	80 83       	st	Z, r24
	_delay_ms(delay_time);
	PORTD = seq[1];
 24e:	8b e2       	ldi	r24, 0x2B	; 43
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__data_start+0x2>
 256:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__data_start+0x3>
 25a:	fc 01       	movw	r30, r24
 25c:	20 83       	st	Z, r18
	PORTB = 2;
 25e:	85 e2       	ldi	r24, 0x25	; 37
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	22 e0       	ldi	r18, 0x02	; 2
 264:	fc 01       	movw	r30, r24
 266:	20 83       	st	Z, r18
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	aa e7       	ldi	r26, 0x7A	; 122
 26e:	b4 e4       	ldi	r27, 0x44	; 68
 270:	8d 83       	std	Y+5, r24	; 0x05
 272:	9e 83       	std	Y+6, r25	; 0x06
 274:	af 83       	std	Y+7, r26	; 0x07
 276:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 278:	8e 01       	movw	r16, r28
 27a:	05 59       	subi	r16, 0x95	; 149
 27c:	1f 4f       	sbci	r17, 0xFF	; 255
 27e:	20 e0       	ldi	r18, 0x00	; 0
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	4a e7       	ldi	r20, 0x7A	; 122
 284:	55 e4       	ldi	r21, 0x45	; 69
 286:	6d 81       	ldd	r22, Y+5	; 0x05
 288:	7e 81       	ldd	r23, Y+6	; 0x06
 28a:	8f 81       	ldd	r24, Y+7	; 0x07
 28c:	98 85       	ldd	r25, Y+8	; 0x08
 28e:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 292:	dc 01       	movw	r26, r24
 294:	cb 01       	movw	r24, r22
 296:	f8 01       	movw	r30, r16
 298:	80 83       	st	Z, r24
 29a:	91 83       	std	Z+1, r25	; 0x01
 29c:	a2 83       	std	Z+2, r26	; 0x02
 29e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 2a0:	ce 01       	movw	r24, r28
 2a2:	85 59       	subi	r24, 0x95	; 149
 2a4:	9f 4f       	sbci	r25, 0xFF	; 255
 2a6:	20 e0       	ldi	r18, 0x00	; 0
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	40 e8       	ldi	r20, 0x80	; 128
 2ac:	5f e3       	ldi	r21, 0x3F	; 63
 2ae:	fc 01       	movw	r30, r24
 2b0:	60 81       	ld	r22, Z
 2b2:	71 81       	ldd	r23, Z+1	; 0x01
 2b4:	82 81       	ldd	r24, Z+2	; 0x02
 2b6:	93 81       	ldd	r25, Z+3	; 0x03
 2b8:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
 2bc:	88 23       	and	r24, r24
 2be:	4c f4       	brge	.+18     	; 0x2d2 <main+0x23c>
		__ticks = 1;
 2c0:	ce 01       	movw	r24, r28
 2c2:	81 59       	subi	r24, 0x91	; 145
 2c4:	9f 4f       	sbci	r25, 0xFF	; 255
 2c6:	21 e0       	ldi	r18, 0x01	; 1
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	fc 01       	movw	r30, r24
 2cc:	31 83       	std	Z+1, r19	; 0x01
 2ce:	20 83       	st	Z, r18
 2d0:	69 c0       	rjmp	.+210    	; 0x3a4 <main+0x30e>
	else if (__tmp > 65535)
 2d2:	ce 01       	movw	r24, r28
 2d4:	85 59       	subi	r24, 0x95	; 149
 2d6:	9f 4f       	sbci	r25, 0xFF	; 255
 2d8:	20 e0       	ldi	r18, 0x00	; 0
 2da:	3f ef       	ldi	r19, 0xFF	; 255
 2dc:	4f e7       	ldi	r20, 0x7F	; 127
 2de:	57 e4       	ldi	r21, 0x47	; 71
 2e0:	fc 01       	movw	r30, r24
 2e2:	60 81       	ld	r22, Z
 2e4:	71 81       	ldd	r23, Z+1	; 0x01
 2e6:	82 81       	ldd	r24, Z+2	; 0x02
 2e8:	93 81       	ldd	r25, Z+3	; 0x03
 2ea:	0e 94 13 07 	call	0xe26	; 0xe26 <__gesf2>
 2ee:	18 16       	cp	r1, r24
 2f0:	0c f0       	brlt	.+2      	; 0x2f4 <main+0x25e>
 2f2:	46 c0       	rjmp	.+140    	; 0x380 <main+0x2ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2f4:	20 e0       	ldi	r18, 0x00	; 0
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	40 e2       	ldi	r20, 0x20	; 32
 2fa:	51 e4       	ldi	r21, 0x41	; 65
 2fc:	6d 81       	ldd	r22, Y+5	; 0x05
 2fe:	7e 81       	ldd	r23, Y+6	; 0x06
 300:	8f 81       	ldd	r24, Y+7	; 0x07
 302:	98 85       	ldd	r25, Y+8	; 0x08
 304:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 308:	dc 01       	movw	r26, r24
 30a:	cb 01       	movw	r24, r22
 30c:	8e 01       	movw	r16, r28
 30e:	01 59       	subi	r16, 0x91	; 145
 310:	1f 4f       	sbci	r17, 0xFF	; 255
 312:	bc 01       	movw	r22, r24
 314:	cd 01       	movw	r24, r26
 316:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 31a:	dc 01       	movw	r26, r24
 31c:	cb 01       	movw	r24, r22
 31e:	f8 01       	movw	r30, r16
 320:	91 83       	std	Z+1, r25	; 0x01
 322:	80 83       	st	Z, r24
		while(__ticks)
 324:	ce 01       	movw	r24, r28
 326:	81 59       	subi	r24, 0x91	; 145
 328:	9f 4f       	sbci	r25, 0xFF	; 255
 32a:	fc 01       	movw	r30, r24
 32c:	80 81       	ld	r24, Z
 32e:	91 81       	ldd	r25, Z+1	; 0x01
 330:	89 2b       	or	r24, r25
 332:	09 f4       	brne	.+2      	; 0x336 <main+0x2a0>
 334:	51 c0       	rjmp	.+162    	; 0x3d8 <main+0x342>
 336:	ce 01       	movw	r24, r28
 338:	8f 58       	subi	r24, 0x8F	; 143
 33a:	9f 4f       	sbci	r25, 0xFF	; 255
 33c:	20 e9       	ldi	r18, 0x90	; 144
 33e:	31 e0       	ldi	r19, 0x01	; 1
 340:	fc 01       	movw	r30, r24
 342:	31 83       	std	Z+1, r19	; 0x01
 344:	20 83       	st	Z, r18
 346:	ce 01       	movw	r24, r28
 348:	8f 58       	subi	r24, 0x8F	; 143
 34a:	9f 4f       	sbci	r25, 0xFF	; 255
 34c:	fc 01       	movw	r30, r24
 34e:	80 81       	ld	r24, Z
 350:	91 81       	ldd	r25, Z+1	; 0x01
 352:	01 97       	sbiw	r24, 0x01	; 1
 354:	f1 f7       	brne	.-4      	; 0x352 <main+0x2bc>
 356:	9e 01       	movw	r18, r28
 358:	2f 58       	subi	r18, 0x8F	; 143
 35a:	3f 4f       	sbci	r19, 0xFF	; 255
 35c:	f9 01       	movw	r30, r18
 35e:	91 83       	std	Z+1, r25	; 0x01
 360:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 362:	ce 01       	movw	r24, r28
 364:	81 59       	subi	r24, 0x91	; 145
 366:	9f 4f       	sbci	r25, 0xFF	; 255
 368:	9e 01       	movw	r18, r28
 36a:	21 59       	subi	r18, 0x91	; 145
 36c:	3f 4f       	sbci	r19, 0xFF	; 255
 36e:	f9 01       	movw	r30, r18
 370:	20 81       	ld	r18, Z
 372:	31 81       	ldd	r19, Z+1	; 0x01
 374:	21 50       	subi	r18, 0x01	; 1
 376:	31 09       	sbc	r19, r1
 378:	fc 01       	movw	r30, r24
 37a:	31 83       	std	Z+1, r19	; 0x01
 37c:	20 83       	st	Z, r18
 37e:	d2 cf       	rjmp	.-92     	; 0x324 <main+0x28e>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 380:	8e 01       	movw	r16, r28
 382:	01 59       	subi	r16, 0x91	; 145
 384:	1f 4f       	sbci	r17, 0xFF	; 255
 386:	ce 01       	movw	r24, r28
 388:	85 59       	subi	r24, 0x95	; 149
 38a:	9f 4f       	sbci	r25, 0xFF	; 255
 38c:	fc 01       	movw	r30, r24
 38e:	60 81       	ld	r22, Z
 390:	71 81       	ldd	r23, Z+1	; 0x01
 392:	82 81       	ldd	r24, Z+2	; 0x02
 394:	93 81       	ldd	r25, Z+3	; 0x03
 396:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 39a:	dc 01       	movw	r26, r24
 39c:	cb 01       	movw	r24, r22
 39e:	f8 01       	movw	r30, r16
 3a0:	91 83       	std	Z+1, r25	; 0x01
 3a2:	80 83       	st	Z, r24
 3a4:	ce 01       	movw	r24, r28
 3a6:	8d 58       	subi	r24, 0x8D	; 141
 3a8:	9f 4f       	sbci	r25, 0xFF	; 255
 3aa:	9e 01       	movw	r18, r28
 3ac:	21 59       	subi	r18, 0x91	; 145
 3ae:	3f 4f       	sbci	r19, 0xFF	; 255
 3b0:	f9 01       	movw	r30, r18
 3b2:	20 81       	ld	r18, Z
 3b4:	31 81       	ldd	r19, Z+1	; 0x01
 3b6:	fc 01       	movw	r30, r24
 3b8:	31 83       	std	Z+1, r19	; 0x01
 3ba:	20 83       	st	Z, r18
 3bc:	ce 01       	movw	r24, r28
 3be:	8d 58       	subi	r24, 0x8D	; 141
 3c0:	9f 4f       	sbci	r25, 0xFF	; 255
 3c2:	fc 01       	movw	r30, r24
 3c4:	80 81       	ld	r24, Z
 3c6:	91 81       	ldd	r25, Z+1	; 0x01
 3c8:	01 97       	sbiw	r24, 0x01	; 1
 3ca:	f1 f7       	brne	.-4      	; 0x3c8 <main+0x332>
 3cc:	9e 01       	movw	r18, r28
 3ce:	2d 58       	subi	r18, 0x8D	; 141
 3d0:	3f 4f       	sbci	r19, 0xFF	; 255
 3d2:	f9 01       	movw	r30, r18
 3d4:	91 83       	std	Z+1, r25	; 0x01
 3d6:	80 83       	st	Z, r24
	_delay_ms(delay_time);
	PORTD = seq[2];
 3d8:	8b e2       	ldi	r24, 0x2B	; 43
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__data_start+0x4>
 3e0:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__data_start+0x5>
 3e4:	fc 01       	movw	r30, r24
 3e6:	20 83       	st	Z, r18
	PORTB = 4;
 3e8:	85 e2       	ldi	r24, 0x25	; 37
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	24 e0       	ldi	r18, 0x04	; 4
 3ee:	fc 01       	movw	r30, r24
 3f0:	20 83       	st	Z, r18
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	aa e7       	ldi	r26, 0x7A	; 122
 3f8:	b4 e4       	ldi	r27, 0x44	; 68
 3fa:	89 87       	std	Y+9, r24	; 0x09
 3fc:	9a 87       	std	Y+10, r25	; 0x0a
 3fe:	ab 87       	std	Y+11, r26	; 0x0b
 400:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 402:	8e 01       	movw	r16, r28
 404:	0f 59       	subi	r16, 0x9F	; 159
 406:	1f 4f       	sbci	r17, 0xFF	; 255
 408:	20 e0       	ldi	r18, 0x00	; 0
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	4a e7       	ldi	r20, 0x7A	; 122
 40e:	55 e4       	ldi	r21, 0x45	; 69
 410:	69 85       	ldd	r22, Y+9	; 0x09
 412:	7a 85       	ldd	r23, Y+10	; 0x0a
 414:	8b 85       	ldd	r24, Y+11	; 0x0b
 416:	9c 85       	ldd	r25, Y+12	; 0x0c
 418:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 41c:	dc 01       	movw	r26, r24
 41e:	cb 01       	movw	r24, r22
 420:	f8 01       	movw	r30, r16
 422:	80 83       	st	Z, r24
 424:	91 83       	std	Z+1, r25	; 0x01
 426:	a2 83       	std	Z+2, r26	; 0x02
 428:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 42a:	ce 01       	movw	r24, r28
 42c:	8f 59       	subi	r24, 0x9F	; 159
 42e:	9f 4f       	sbci	r25, 0xFF	; 255
 430:	20 e0       	ldi	r18, 0x00	; 0
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	40 e8       	ldi	r20, 0x80	; 128
 436:	5f e3       	ldi	r21, 0x3F	; 63
 438:	fc 01       	movw	r30, r24
 43a:	60 81       	ld	r22, Z
 43c:	71 81       	ldd	r23, Z+1	; 0x01
 43e:	82 81       	ldd	r24, Z+2	; 0x02
 440:	93 81       	ldd	r25, Z+3	; 0x03
 442:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
 446:	88 23       	and	r24, r24
 448:	4c f4       	brge	.+18     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
		__ticks = 1;
 44a:	ce 01       	movw	r24, r28
 44c:	8b 59       	subi	r24, 0x9B	; 155
 44e:	9f 4f       	sbci	r25, 0xFF	; 255
 450:	21 e0       	ldi	r18, 0x01	; 1
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	fc 01       	movw	r30, r24
 456:	31 83       	std	Z+1, r19	; 0x01
 458:	20 83       	st	Z, r18
 45a:	69 c0       	rjmp	.+210    	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
	else if (__tmp > 65535)
 45c:	ce 01       	movw	r24, r28
 45e:	8f 59       	subi	r24, 0x9F	; 159
 460:	9f 4f       	sbci	r25, 0xFF	; 255
 462:	20 e0       	ldi	r18, 0x00	; 0
 464:	3f ef       	ldi	r19, 0xFF	; 255
 466:	4f e7       	ldi	r20, 0x7F	; 127
 468:	57 e4       	ldi	r21, 0x47	; 71
 46a:	fc 01       	movw	r30, r24
 46c:	60 81       	ld	r22, Z
 46e:	71 81       	ldd	r23, Z+1	; 0x01
 470:	82 81       	ldd	r24, Z+2	; 0x02
 472:	93 81       	ldd	r25, Z+3	; 0x03
 474:	0e 94 13 07 	call	0xe26	; 0xe26 <__gesf2>
 478:	18 16       	cp	r1, r24
 47a:	0c f0       	brlt	.+2      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 47c:	46 c0       	rjmp	.+140    	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 47e:	20 e0       	ldi	r18, 0x00	; 0
 480:	30 e0       	ldi	r19, 0x00	; 0
 482:	40 e2       	ldi	r20, 0x20	; 32
 484:	51 e4       	ldi	r21, 0x41	; 65
 486:	69 85       	ldd	r22, Y+9	; 0x09
 488:	7a 85       	ldd	r23, Y+10	; 0x0a
 48a:	8b 85       	ldd	r24, Y+11	; 0x0b
 48c:	9c 85       	ldd	r25, Y+12	; 0x0c
 48e:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 492:	dc 01       	movw	r26, r24
 494:	cb 01       	movw	r24, r22
 496:	8e 01       	movw	r16, r28
 498:	0b 59       	subi	r16, 0x9B	; 155
 49a:	1f 4f       	sbci	r17, 0xFF	; 255
 49c:	bc 01       	movw	r22, r24
 49e:	cd 01       	movw	r24, r26
 4a0:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 4a4:	dc 01       	movw	r26, r24
 4a6:	cb 01       	movw	r24, r22
 4a8:	f8 01       	movw	r30, r16
 4aa:	91 83       	std	Z+1, r25	; 0x01
 4ac:	80 83       	st	Z, r24
		while(__ticks)
 4ae:	ce 01       	movw	r24, r28
 4b0:	8b 59       	subi	r24, 0x9B	; 155
 4b2:	9f 4f       	sbci	r25, 0xFF	; 255
 4b4:	fc 01       	movw	r30, r24
 4b6:	80 81       	ld	r24, Z
 4b8:	91 81       	ldd	r25, Z+1	; 0x01
 4ba:	89 2b       	or	r24, r25
 4bc:	09 f4       	brne	.+2      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4be:	51 c0       	rjmp	.+162    	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 4c0:	ce 01       	movw	r24, r28
 4c2:	89 59       	subi	r24, 0x99	; 153
 4c4:	9f 4f       	sbci	r25, 0xFF	; 255
 4c6:	20 e9       	ldi	r18, 0x90	; 144
 4c8:	31 e0       	ldi	r19, 0x01	; 1
 4ca:	fc 01       	movw	r30, r24
 4cc:	31 83       	std	Z+1, r19	; 0x01
 4ce:	20 83       	st	Z, r18
 4d0:	ce 01       	movw	r24, r28
 4d2:	89 59       	subi	r24, 0x99	; 153
 4d4:	9f 4f       	sbci	r25, 0xFF	; 255
 4d6:	fc 01       	movw	r30, r24
 4d8:	80 81       	ld	r24, Z
 4da:	91 81       	ldd	r25, Z+1	; 0x01
 4dc:	01 97       	sbiw	r24, 0x01	; 1
 4de:	f1 f7       	brne	.-4      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4e0:	9e 01       	movw	r18, r28
 4e2:	29 59       	subi	r18, 0x99	; 153
 4e4:	3f 4f       	sbci	r19, 0xFF	; 255
 4e6:	f9 01       	movw	r30, r18
 4e8:	91 83       	std	Z+1, r25	; 0x01
 4ea:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4ec:	ce 01       	movw	r24, r28
 4ee:	8b 59       	subi	r24, 0x9B	; 155
 4f0:	9f 4f       	sbci	r25, 0xFF	; 255
 4f2:	9e 01       	movw	r18, r28
 4f4:	2b 59       	subi	r18, 0x9B	; 155
 4f6:	3f 4f       	sbci	r19, 0xFF	; 255
 4f8:	f9 01       	movw	r30, r18
 4fa:	20 81       	ld	r18, Z
 4fc:	31 81       	ldd	r19, Z+1	; 0x01
 4fe:	21 50       	subi	r18, 0x01	; 1
 500:	31 09       	sbc	r19, r1
 502:	fc 01       	movw	r30, r24
 504:	31 83       	std	Z+1, r19	; 0x01
 506:	20 83       	st	Z, r18
 508:	d2 cf       	rjmp	.-92     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 50a:	8e 01       	movw	r16, r28
 50c:	0b 59       	subi	r16, 0x9B	; 155
 50e:	1f 4f       	sbci	r17, 0xFF	; 255
 510:	ce 01       	movw	r24, r28
 512:	8f 59       	subi	r24, 0x9F	; 159
 514:	9f 4f       	sbci	r25, 0xFF	; 255
 516:	fc 01       	movw	r30, r24
 518:	60 81       	ld	r22, Z
 51a:	71 81       	ldd	r23, Z+1	; 0x01
 51c:	82 81       	ldd	r24, Z+2	; 0x02
 51e:	93 81       	ldd	r25, Z+3	; 0x03
 520:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 524:	dc 01       	movw	r26, r24
 526:	cb 01       	movw	r24, r22
 528:	f8 01       	movw	r30, r16
 52a:	91 83       	std	Z+1, r25	; 0x01
 52c:	80 83       	st	Z, r24
 52e:	ce 01       	movw	r24, r28
 530:	87 59       	subi	r24, 0x97	; 151
 532:	9f 4f       	sbci	r25, 0xFF	; 255
 534:	9e 01       	movw	r18, r28
 536:	2b 59       	subi	r18, 0x9B	; 155
 538:	3f 4f       	sbci	r19, 0xFF	; 255
 53a:	f9 01       	movw	r30, r18
 53c:	20 81       	ld	r18, Z
 53e:	31 81       	ldd	r19, Z+1	; 0x01
 540:	fc 01       	movw	r30, r24
 542:	31 83       	std	Z+1, r19	; 0x01
 544:	20 83       	st	Z, r18
 546:	ce 01       	movw	r24, r28
 548:	87 59       	subi	r24, 0x97	; 151
 54a:	9f 4f       	sbci	r25, 0xFF	; 255
 54c:	fc 01       	movw	r30, r24
 54e:	80 81       	ld	r24, Z
 550:	91 81       	ldd	r25, Z+1	; 0x01
 552:	01 97       	sbiw	r24, 0x01	; 1
 554:	f1 f7       	brne	.-4      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 556:	9e 01       	movw	r18, r28
 558:	27 59       	subi	r18, 0x97	; 151
 55a:	3f 4f       	sbci	r19, 0xFF	; 255
 55c:	f9 01       	movw	r30, r18
 55e:	91 83       	std	Z+1, r25	; 0x01
 560:	80 83       	st	Z, r24
	_delay_ms(delay_time);
	PORTD = seq[3];
 562:	8b e2       	ldi	r24, 0x2B	; 43
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_start+0x6>
 56a:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_start+0x7>
 56e:	fc 01       	movw	r30, r24
 570:	20 83       	st	Z, r18
	PORTB = 1;
 572:	85 e2       	ldi	r24, 0x25	; 37
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	21 e0       	ldi	r18, 0x01	; 1
 578:	fc 01       	movw	r30, r24
 57a:	20 83       	st	Z, r18
 57c:	80 e0       	ldi	r24, 0x00	; 0
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	aa e7       	ldi	r26, 0x7A	; 122
 582:	b4 e4       	ldi	r27, 0x44	; 68
 584:	8d 87       	std	Y+13, r24	; 0x0d
 586:	9e 87       	std	Y+14, r25	; 0x0e
 588:	af 87       	std	Y+15, r26	; 0x0f
 58a:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 58c:	8e 01       	movw	r16, r28
 58e:	09 5a       	subi	r16, 0xA9	; 169
 590:	1f 4f       	sbci	r17, 0xFF	; 255
 592:	20 e0       	ldi	r18, 0x00	; 0
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	4a e7       	ldi	r20, 0x7A	; 122
 598:	55 e4       	ldi	r21, 0x45	; 69
 59a:	6d 85       	ldd	r22, Y+13	; 0x0d
 59c:	7e 85       	ldd	r23, Y+14	; 0x0e
 59e:	8f 85       	ldd	r24, Y+15	; 0x0f
 5a0:	98 89       	ldd	r25, Y+16	; 0x10
 5a2:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 5a6:	dc 01       	movw	r26, r24
 5a8:	cb 01       	movw	r24, r22
 5aa:	f8 01       	movw	r30, r16
 5ac:	80 83       	st	Z, r24
 5ae:	91 83       	std	Z+1, r25	; 0x01
 5b0:	a2 83       	std	Z+2, r26	; 0x02
 5b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 5b4:	ce 01       	movw	r24, r28
 5b6:	89 5a       	subi	r24, 0xA9	; 169
 5b8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ba:	20 e0       	ldi	r18, 0x00	; 0
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	40 e8       	ldi	r20, 0x80	; 128
 5c0:	5f e3       	ldi	r21, 0x3F	; 63
 5c2:	fc 01       	movw	r30, r24
 5c4:	60 81       	ld	r22, Z
 5c6:	71 81       	ldd	r23, Z+1	; 0x01
 5c8:	82 81       	ldd	r24, Z+2	; 0x02
 5ca:	93 81       	ldd	r25, Z+3	; 0x03
 5cc:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
 5d0:	88 23       	and	r24, r24
 5d2:	4c f4       	brge	.+18     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
		__ticks = 1;
 5d4:	ce 01       	movw	r24, r28
 5d6:	85 5a       	subi	r24, 0xA5	; 165
 5d8:	9f 4f       	sbci	r25, 0xFF	; 255
 5da:	21 e0       	ldi	r18, 0x01	; 1
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	fc 01       	movw	r30, r24
 5e0:	31 83       	std	Z+1, r19	; 0x01
 5e2:	20 83       	st	Z, r18
 5e4:	69 c0       	rjmp	.+210    	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
	else if (__tmp > 65535)
 5e6:	ce 01       	movw	r24, r28
 5e8:	89 5a       	subi	r24, 0xA9	; 169
 5ea:	9f 4f       	sbci	r25, 0xFF	; 255
 5ec:	20 e0       	ldi	r18, 0x00	; 0
 5ee:	3f ef       	ldi	r19, 0xFF	; 255
 5f0:	4f e7       	ldi	r20, 0x7F	; 127
 5f2:	57 e4       	ldi	r21, 0x47	; 71
 5f4:	fc 01       	movw	r30, r24
 5f6:	60 81       	ld	r22, Z
 5f8:	71 81       	ldd	r23, Z+1	; 0x01
 5fa:	82 81       	ldd	r24, Z+2	; 0x02
 5fc:	93 81       	ldd	r25, Z+3	; 0x03
 5fe:	0e 94 13 07 	call	0xe26	; 0xe26 <__gesf2>
 602:	18 16       	cp	r1, r24
 604:	0c f0       	brlt	.+2      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 606:	46 c0       	rjmp	.+140    	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 608:	20 e0       	ldi	r18, 0x00	; 0
 60a:	30 e0       	ldi	r19, 0x00	; 0
 60c:	40 e2       	ldi	r20, 0x20	; 32
 60e:	51 e4       	ldi	r21, 0x41	; 65
 610:	6d 85       	ldd	r22, Y+13	; 0x0d
 612:	7e 85       	ldd	r23, Y+14	; 0x0e
 614:	8f 85       	ldd	r24, Y+15	; 0x0f
 616:	98 89       	ldd	r25, Y+16	; 0x10
 618:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 61c:	dc 01       	movw	r26, r24
 61e:	cb 01       	movw	r24, r22
 620:	8e 01       	movw	r16, r28
 622:	05 5a       	subi	r16, 0xA5	; 165
 624:	1f 4f       	sbci	r17, 0xFF	; 255
 626:	bc 01       	movw	r22, r24
 628:	cd 01       	movw	r24, r26
 62a:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 62e:	dc 01       	movw	r26, r24
 630:	cb 01       	movw	r24, r22
 632:	f8 01       	movw	r30, r16
 634:	91 83       	std	Z+1, r25	; 0x01
 636:	80 83       	st	Z, r24
		while(__ticks)
 638:	ce 01       	movw	r24, r28
 63a:	85 5a       	subi	r24, 0xA5	; 165
 63c:	9f 4f       	sbci	r25, 0xFF	; 255
 63e:	fc 01       	movw	r30, r24
 640:	80 81       	ld	r24, Z
 642:	91 81       	ldd	r25, Z+1	; 0x01
 644:	89 2b       	or	r24, r25
 646:	09 f4       	brne	.+2      	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 648:	51 c0       	rjmp	.+162    	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
 64a:	ce 01       	movw	r24, r28
 64c:	83 5a       	subi	r24, 0xA3	; 163
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	20 e9       	ldi	r18, 0x90	; 144
 652:	31 e0       	ldi	r19, 0x01	; 1
 654:	fc 01       	movw	r30, r24
 656:	31 83       	std	Z+1, r19	; 0x01
 658:	20 83       	st	Z, r18
 65a:	ce 01       	movw	r24, r28
 65c:	83 5a       	subi	r24, 0xA3	; 163
 65e:	9f 4f       	sbci	r25, 0xFF	; 255
 660:	fc 01       	movw	r30, r24
 662:	80 81       	ld	r24, Z
 664:	91 81       	ldd	r25, Z+1	; 0x01
 666:	01 97       	sbiw	r24, 0x01	; 1
 668:	f1 f7       	brne	.-4      	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 66a:	9e 01       	movw	r18, r28
 66c:	23 5a       	subi	r18, 0xA3	; 163
 66e:	3f 4f       	sbci	r19, 0xFF	; 255
 670:	f9 01       	movw	r30, r18
 672:	91 83       	std	Z+1, r25	; 0x01
 674:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 676:	ce 01       	movw	r24, r28
 678:	85 5a       	subi	r24, 0xA5	; 165
 67a:	9f 4f       	sbci	r25, 0xFF	; 255
 67c:	9e 01       	movw	r18, r28
 67e:	25 5a       	subi	r18, 0xA5	; 165
 680:	3f 4f       	sbci	r19, 0xFF	; 255
 682:	f9 01       	movw	r30, r18
 684:	20 81       	ld	r18, Z
 686:	31 81       	ldd	r19, Z+1	; 0x01
 688:	21 50       	subi	r18, 0x01	; 1
 68a:	31 09       	sbc	r19, r1
 68c:	fc 01       	movw	r30, r24
 68e:	31 83       	std	Z+1, r19	; 0x01
 690:	20 83       	st	Z, r18
 692:	d2 cf       	rjmp	.-92     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 694:	8e 01       	movw	r16, r28
 696:	05 5a       	subi	r16, 0xA5	; 165
 698:	1f 4f       	sbci	r17, 0xFF	; 255
 69a:	ce 01       	movw	r24, r28
 69c:	89 5a       	subi	r24, 0xA9	; 169
 69e:	9f 4f       	sbci	r25, 0xFF	; 255
 6a0:	fc 01       	movw	r30, r24
 6a2:	60 81       	ld	r22, Z
 6a4:	71 81       	ldd	r23, Z+1	; 0x01
 6a6:	82 81       	ldd	r24, Z+2	; 0x02
 6a8:	93 81       	ldd	r25, Z+3	; 0x03
 6aa:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 6ae:	dc 01       	movw	r26, r24
 6b0:	cb 01       	movw	r24, r22
 6b2:	f8 01       	movw	r30, r16
 6b4:	91 83       	std	Z+1, r25	; 0x01
 6b6:	80 83       	st	Z, r24
 6b8:	ce 01       	movw	r24, r28
 6ba:	81 5a       	subi	r24, 0xA1	; 161
 6bc:	9f 4f       	sbci	r25, 0xFF	; 255
 6be:	9e 01       	movw	r18, r28
 6c0:	25 5a       	subi	r18, 0xA5	; 165
 6c2:	3f 4f       	sbci	r19, 0xFF	; 255
 6c4:	f9 01       	movw	r30, r18
 6c6:	20 81       	ld	r18, Z
 6c8:	31 81       	ldd	r19, Z+1	; 0x01
 6ca:	fc 01       	movw	r30, r24
 6cc:	31 83       	std	Z+1, r19	; 0x01
 6ce:	20 83       	st	Z, r18
 6d0:	ce 01       	movw	r24, r28
 6d2:	81 5a       	subi	r24, 0xA1	; 161
 6d4:	9f 4f       	sbci	r25, 0xFF	; 255
 6d6:	fc 01       	movw	r30, r24
 6d8:	80 81       	ld	r24, Z
 6da:	91 81       	ldd	r25, Z+1	; 0x01
 6dc:	01 97       	sbiw	r24, 0x01	; 1
 6de:	f1 f7       	brne	.-4      	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6e0:	9e 01       	movw	r18, r28
 6e2:	21 5a       	subi	r18, 0xA1	; 161
 6e4:	3f 4f       	sbci	r19, 0xFF	; 255
 6e6:	f9 01       	movw	r30, r18
 6e8:	91 83       	std	Z+1, r25	; 0x01
 6ea:	80 83       	st	Z, r24
	_delay_ms(delay_time);
	PORTD = seq[4];
 6ec:	8b e2       	ldi	r24, 0x2B	; 43
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_start+0x8>
 6f4:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_start+0x9>
 6f8:	fc 01       	movw	r30, r24
 6fa:	20 83       	st	Z, r18
	PORTB = 2;
 6fc:	85 e2       	ldi	r24, 0x25	; 37
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	22 e0       	ldi	r18, 0x02	; 2
 702:	fc 01       	movw	r30, r24
 704:	20 83       	st	Z, r18
 706:	80 e0       	ldi	r24, 0x00	; 0
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	aa e7       	ldi	r26, 0x7A	; 122
 70c:	b4 e4       	ldi	r27, 0x44	; 68
 70e:	89 8b       	std	Y+17, r24	; 0x11
 710:	9a 8b       	std	Y+18, r25	; 0x12
 712:	ab 8b       	std	Y+19, r26	; 0x13
 714:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 716:	8e 01       	movw	r16, r28
 718:	03 5b       	subi	r16, 0xB3	; 179
 71a:	1f 4f       	sbci	r17, 0xFF	; 255
 71c:	20 e0       	ldi	r18, 0x00	; 0
 71e:	30 e0       	ldi	r19, 0x00	; 0
 720:	4a e7       	ldi	r20, 0x7A	; 122
 722:	55 e4       	ldi	r21, 0x45	; 69
 724:	69 89       	ldd	r22, Y+17	; 0x11
 726:	7a 89       	ldd	r23, Y+18	; 0x12
 728:	8b 89       	ldd	r24, Y+19	; 0x13
 72a:	9c 89       	ldd	r25, Y+20	; 0x14
 72c:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 730:	dc 01       	movw	r26, r24
 732:	cb 01       	movw	r24, r22
 734:	f8 01       	movw	r30, r16
 736:	80 83       	st	Z, r24
 738:	91 83       	std	Z+1, r25	; 0x01
 73a:	a2 83       	std	Z+2, r26	; 0x02
 73c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 73e:	ce 01       	movw	r24, r28
 740:	83 5b       	subi	r24, 0xB3	; 179
 742:	9f 4f       	sbci	r25, 0xFF	; 255
 744:	20 e0       	ldi	r18, 0x00	; 0
 746:	30 e0       	ldi	r19, 0x00	; 0
 748:	40 e8       	ldi	r20, 0x80	; 128
 74a:	5f e3       	ldi	r21, 0x3F	; 63
 74c:	fc 01       	movw	r30, r24
 74e:	60 81       	ld	r22, Z
 750:	71 81       	ldd	r23, Z+1	; 0x01
 752:	82 81       	ldd	r24, Z+2	; 0x02
 754:	93 81       	ldd	r25, Z+3	; 0x03
 756:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
 75a:	88 23       	and	r24, r24
 75c:	4c f4       	brge	.+18     	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
		__ticks = 1;
 75e:	ce 01       	movw	r24, r28
 760:	8f 5a       	subi	r24, 0xAF	; 175
 762:	9f 4f       	sbci	r25, 0xFF	; 255
 764:	21 e0       	ldi	r18, 0x01	; 1
 766:	30 e0       	ldi	r19, 0x00	; 0
 768:	fc 01       	movw	r30, r24
 76a:	31 83       	std	Z+1, r19	; 0x01
 76c:	20 83       	st	Z, r18
 76e:	69 c0       	rjmp	.+210    	; 0x842 <__LOCK_REGION_LENGTH__+0x442>
	else if (__tmp > 65535)
 770:	ce 01       	movw	r24, r28
 772:	83 5b       	subi	r24, 0xB3	; 179
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	20 e0       	ldi	r18, 0x00	; 0
 778:	3f ef       	ldi	r19, 0xFF	; 255
 77a:	4f e7       	ldi	r20, 0x7F	; 127
 77c:	57 e4       	ldi	r21, 0x47	; 71
 77e:	fc 01       	movw	r30, r24
 780:	60 81       	ld	r22, Z
 782:	71 81       	ldd	r23, Z+1	; 0x01
 784:	82 81       	ldd	r24, Z+2	; 0x02
 786:	93 81       	ldd	r25, Z+3	; 0x03
 788:	0e 94 13 07 	call	0xe26	; 0xe26 <__gesf2>
 78c:	18 16       	cp	r1, r24
 78e:	0c f0       	brlt	.+2      	; 0x792 <__LOCK_REGION_LENGTH__+0x392>
 790:	46 c0       	rjmp	.+140    	; 0x81e <__LOCK_REGION_LENGTH__+0x41e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 792:	20 e0       	ldi	r18, 0x00	; 0
 794:	30 e0       	ldi	r19, 0x00	; 0
 796:	40 e2       	ldi	r20, 0x20	; 32
 798:	51 e4       	ldi	r21, 0x41	; 65
 79a:	69 89       	ldd	r22, Y+17	; 0x11
 79c:	7a 89       	ldd	r23, Y+18	; 0x12
 79e:	8b 89       	ldd	r24, Y+19	; 0x13
 7a0:	9c 89       	ldd	r25, Y+20	; 0x14
 7a2:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 7a6:	dc 01       	movw	r26, r24
 7a8:	cb 01       	movw	r24, r22
 7aa:	8e 01       	movw	r16, r28
 7ac:	0f 5a       	subi	r16, 0xAF	; 175
 7ae:	1f 4f       	sbci	r17, 0xFF	; 255
 7b0:	bc 01       	movw	r22, r24
 7b2:	cd 01       	movw	r24, r26
 7b4:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 7b8:	dc 01       	movw	r26, r24
 7ba:	cb 01       	movw	r24, r22
 7bc:	f8 01       	movw	r30, r16
 7be:	91 83       	std	Z+1, r25	; 0x01
 7c0:	80 83       	st	Z, r24
		while(__ticks)
 7c2:	ce 01       	movw	r24, r28
 7c4:	8f 5a       	subi	r24, 0xAF	; 175
 7c6:	9f 4f       	sbci	r25, 0xFF	; 255
 7c8:	fc 01       	movw	r30, r24
 7ca:	80 81       	ld	r24, Z
 7cc:	91 81       	ldd	r25, Z+1	; 0x01
 7ce:	89 2b       	or	r24, r25
 7d0:	09 f4       	brne	.+2      	; 0x7d4 <__LOCK_REGION_LENGTH__+0x3d4>
 7d2:	51 c0       	rjmp	.+162    	; 0x876 <__LOCK_REGION_LENGTH__+0x476>
 7d4:	ce 01       	movw	r24, r28
 7d6:	8d 5a       	subi	r24, 0xAD	; 173
 7d8:	9f 4f       	sbci	r25, 0xFF	; 255
 7da:	20 e9       	ldi	r18, 0x90	; 144
 7dc:	31 e0       	ldi	r19, 0x01	; 1
 7de:	fc 01       	movw	r30, r24
 7e0:	31 83       	std	Z+1, r19	; 0x01
 7e2:	20 83       	st	Z, r18
 7e4:	ce 01       	movw	r24, r28
 7e6:	8d 5a       	subi	r24, 0xAD	; 173
 7e8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ea:	fc 01       	movw	r30, r24
 7ec:	80 81       	ld	r24, Z
 7ee:	91 81       	ldd	r25, Z+1	; 0x01
 7f0:	01 97       	sbiw	r24, 0x01	; 1
 7f2:	f1 f7       	brne	.-4      	; 0x7f0 <__LOCK_REGION_LENGTH__+0x3f0>
 7f4:	9e 01       	movw	r18, r28
 7f6:	2d 5a       	subi	r18, 0xAD	; 173
 7f8:	3f 4f       	sbci	r19, 0xFF	; 255
 7fa:	f9 01       	movw	r30, r18
 7fc:	91 83       	std	Z+1, r25	; 0x01
 7fe:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 800:	ce 01       	movw	r24, r28
 802:	8f 5a       	subi	r24, 0xAF	; 175
 804:	9f 4f       	sbci	r25, 0xFF	; 255
 806:	9e 01       	movw	r18, r28
 808:	2f 5a       	subi	r18, 0xAF	; 175
 80a:	3f 4f       	sbci	r19, 0xFF	; 255
 80c:	f9 01       	movw	r30, r18
 80e:	20 81       	ld	r18, Z
 810:	31 81       	ldd	r19, Z+1	; 0x01
 812:	21 50       	subi	r18, 0x01	; 1
 814:	31 09       	sbc	r19, r1
 816:	fc 01       	movw	r30, r24
 818:	31 83       	std	Z+1, r19	; 0x01
 81a:	20 83       	st	Z, r18
 81c:	d2 cf       	rjmp	.-92     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 81e:	8e 01       	movw	r16, r28
 820:	0f 5a       	subi	r16, 0xAF	; 175
 822:	1f 4f       	sbci	r17, 0xFF	; 255
 824:	ce 01       	movw	r24, r28
 826:	83 5b       	subi	r24, 0xB3	; 179
 828:	9f 4f       	sbci	r25, 0xFF	; 255
 82a:	fc 01       	movw	r30, r24
 82c:	60 81       	ld	r22, Z
 82e:	71 81       	ldd	r23, Z+1	; 0x01
 830:	82 81       	ldd	r24, Z+2	; 0x02
 832:	93 81       	ldd	r25, Z+3	; 0x03
 834:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 838:	dc 01       	movw	r26, r24
 83a:	cb 01       	movw	r24, r22
 83c:	f8 01       	movw	r30, r16
 83e:	91 83       	std	Z+1, r25	; 0x01
 840:	80 83       	st	Z, r24
 842:	ce 01       	movw	r24, r28
 844:	8b 5a       	subi	r24, 0xAB	; 171
 846:	9f 4f       	sbci	r25, 0xFF	; 255
 848:	9e 01       	movw	r18, r28
 84a:	2f 5a       	subi	r18, 0xAF	; 175
 84c:	3f 4f       	sbci	r19, 0xFF	; 255
 84e:	f9 01       	movw	r30, r18
 850:	20 81       	ld	r18, Z
 852:	31 81       	ldd	r19, Z+1	; 0x01
 854:	fc 01       	movw	r30, r24
 856:	31 83       	std	Z+1, r19	; 0x01
 858:	20 83       	st	Z, r18
 85a:	ce 01       	movw	r24, r28
 85c:	8b 5a       	subi	r24, 0xAB	; 171
 85e:	9f 4f       	sbci	r25, 0xFF	; 255
 860:	fc 01       	movw	r30, r24
 862:	80 81       	ld	r24, Z
 864:	91 81       	ldd	r25, Z+1	; 0x01
 866:	01 97       	sbiw	r24, 0x01	; 1
 868:	f1 f7       	brne	.-4      	; 0x866 <__LOCK_REGION_LENGTH__+0x466>
 86a:	9e 01       	movw	r18, r28
 86c:	2b 5a       	subi	r18, 0xAB	; 171
 86e:	3f 4f       	sbci	r19, 0xFF	; 255
 870:	f9 01       	movw	r30, r18
 872:	91 83       	std	Z+1, r25	; 0x01
 874:	80 83       	st	Z, r24
	_delay_ms(delay_time);
	PORTD = seq[5];
 876:	8b e2       	ldi	r24, 0x2B	; 43
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_start+0xa>
 87e:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_start+0xb>
 882:	fc 01       	movw	r30, r24
 884:	20 83       	st	Z, r18
	PORTB = 4;
 886:	85 e2       	ldi	r24, 0x25	; 37
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	24 e0       	ldi	r18, 0x04	; 4
 88c:	fc 01       	movw	r30, r24
 88e:	20 83       	st	Z, r18
 890:	80 e0       	ldi	r24, 0x00	; 0
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	aa e7       	ldi	r26, 0x7A	; 122
 896:	b4 e4       	ldi	r27, 0x44	; 68
 898:	8d 8b       	std	Y+21, r24	; 0x15
 89a:	9e 8b       	std	Y+22, r25	; 0x16
 89c:	af 8b       	std	Y+23, r26	; 0x17
 89e:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 8a0:	8e 01       	movw	r16, r28
 8a2:	0d 5b       	subi	r16, 0xBD	; 189
 8a4:	1f 4f       	sbci	r17, 0xFF	; 255
 8a6:	20 e0       	ldi	r18, 0x00	; 0
 8a8:	30 e0       	ldi	r19, 0x00	; 0
 8aa:	4a e7       	ldi	r20, 0x7A	; 122
 8ac:	55 e4       	ldi	r21, 0x45	; 69
 8ae:	6d 89       	ldd	r22, Y+21	; 0x15
 8b0:	7e 89       	ldd	r23, Y+22	; 0x16
 8b2:	8f 89       	ldd	r24, Y+23	; 0x17
 8b4:	98 8d       	ldd	r25, Y+24	; 0x18
 8b6:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 8ba:	dc 01       	movw	r26, r24
 8bc:	cb 01       	movw	r24, r22
 8be:	f8 01       	movw	r30, r16
 8c0:	80 83       	st	Z, r24
 8c2:	91 83       	std	Z+1, r25	; 0x01
 8c4:	a2 83       	std	Z+2, r26	; 0x02
 8c6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 8c8:	ce 01       	movw	r24, r28
 8ca:	8d 5b       	subi	r24, 0xBD	; 189
 8cc:	9f 4f       	sbci	r25, 0xFF	; 255
 8ce:	20 e0       	ldi	r18, 0x00	; 0
 8d0:	30 e0       	ldi	r19, 0x00	; 0
 8d2:	40 e8       	ldi	r20, 0x80	; 128
 8d4:	5f e3       	ldi	r21, 0x3F	; 63
 8d6:	fc 01       	movw	r30, r24
 8d8:	60 81       	ld	r22, Z
 8da:	71 81       	ldd	r23, Z+1	; 0x01
 8dc:	82 81       	ldd	r24, Z+2	; 0x02
 8de:	93 81       	ldd	r25, Z+3	; 0x03
 8e0:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
 8e4:	88 23       	and	r24, r24
 8e6:	4c f4       	brge	.+18     	; 0x8fa <__LOCK_REGION_LENGTH__+0x4fa>
		__ticks = 1;
 8e8:	ce 01       	movw	r24, r28
 8ea:	89 5b       	subi	r24, 0xB9	; 185
 8ec:	9f 4f       	sbci	r25, 0xFF	; 255
 8ee:	21 e0       	ldi	r18, 0x01	; 1
 8f0:	30 e0       	ldi	r19, 0x00	; 0
 8f2:	fc 01       	movw	r30, r24
 8f4:	31 83       	std	Z+1, r19	; 0x01
 8f6:	20 83       	st	Z, r18
 8f8:	69 c0       	rjmp	.+210    	; 0x9cc <__stack+0xcd>
	else if (__tmp > 65535)
 8fa:	ce 01       	movw	r24, r28
 8fc:	8d 5b       	subi	r24, 0xBD	; 189
 8fe:	9f 4f       	sbci	r25, 0xFF	; 255
 900:	20 e0       	ldi	r18, 0x00	; 0
 902:	3f ef       	ldi	r19, 0xFF	; 255
 904:	4f e7       	ldi	r20, 0x7F	; 127
 906:	57 e4       	ldi	r21, 0x47	; 71
 908:	fc 01       	movw	r30, r24
 90a:	60 81       	ld	r22, Z
 90c:	71 81       	ldd	r23, Z+1	; 0x01
 90e:	82 81       	ldd	r24, Z+2	; 0x02
 910:	93 81       	ldd	r25, Z+3	; 0x03
 912:	0e 94 13 07 	call	0xe26	; 0xe26 <__gesf2>
 916:	18 16       	cp	r1, r24
 918:	0c f0       	brlt	.+2      	; 0x91c <__stack+0x1d>
 91a:	46 c0       	rjmp	.+140    	; 0x9a8 <__stack+0xa9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 91c:	20 e0       	ldi	r18, 0x00	; 0
 91e:	30 e0       	ldi	r19, 0x00	; 0
 920:	40 e2       	ldi	r20, 0x20	; 32
 922:	51 e4       	ldi	r21, 0x41	; 65
 924:	6d 89       	ldd	r22, Y+21	; 0x15
 926:	7e 89       	ldd	r23, Y+22	; 0x16
 928:	8f 89       	ldd	r24, Y+23	; 0x17
 92a:	98 8d       	ldd	r25, Y+24	; 0x18
 92c:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 930:	dc 01       	movw	r26, r24
 932:	cb 01       	movw	r24, r22
 934:	8e 01       	movw	r16, r28
 936:	09 5b       	subi	r16, 0xB9	; 185
 938:	1f 4f       	sbci	r17, 0xFF	; 255
 93a:	bc 01       	movw	r22, r24
 93c:	cd 01       	movw	r24, r26
 93e:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 942:	dc 01       	movw	r26, r24
 944:	cb 01       	movw	r24, r22
 946:	f8 01       	movw	r30, r16
 948:	91 83       	std	Z+1, r25	; 0x01
 94a:	80 83       	st	Z, r24
		while(__ticks)
 94c:	ce 01       	movw	r24, r28
 94e:	89 5b       	subi	r24, 0xB9	; 185
 950:	9f 4f       	sbci	r25, 0xFF	; 255
 952:	fc 01       	movw	r30, r24
 954:	80 81       	ld	r24, Z
 956:	91 81       	ldd	r25, Z+1	; 0x01
 958:	89 2b       	or	r24, r25
 95a:	09 f4       	brne	.+2      	; 0x95e <__stack+0x5f>
 95c:	51 c0       	rjmp	.+162    	; 0xa00 <__stack+0x101>
 95e:	ce 01       	movw	r24, r28
 960:	87 5b       	subi	r24, 0xB7	; 183
 962:	9f 4f       	sbci	r25, 0xFF	; 255
 964:	20 e9       	ldi	r18, 0x90	; 144
 966:	31 e0       	ldi	r19, 0x01	; 1
 968:	fc 01       	movw	r30, r24
 96a:	31 83       	std	Z+1, r19	; 0x01
 96c:	20 83       	st	Z, r18
 96e:	ce 01       	movw	r24, r28
 970:	87 5b       	subi	r24, 0xB7	; 183
 972:	9f 4f       	sbci	r25, 0xFF	; 255
 974:	fc 01       	movw	r30, r24
 976:	80 81       	ld	r24, Z
 978:	91 81       	ldd	r25, Z+1	; 0x01
 97a:	01 97       	sbiw	r24, 0x01	; 1
 97c:	f1 f7       	brne	.-4      	; 0x97a <__stack+0x7b>
 97e:	9e 01       	movw	r18, r28
 980:	27 5b       	subi	r18, 0xB7	; 183
 982:	3f 4f       	sbci	r19, 0xFF	; 255
 984:	f9 01       	movw	r30, r18
 986:	91 83       	std	Z+1, r25	; 0x01
 988:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 98a:	ce 01       	movw	r24, r28
 98c:	89 5b       	subi	r24, 0xB9	; 185
 98e:	9f 4f       	sbci	r25, 0xFF	; 255
 990:	9e 01       	movw	r18, r28
 992:	29 5b       	subi	r18, 0xB9	; 185
 994:	3f 4f       	sbci	r19, 0xFF	; 255
 996:	f9 01       	movw	r30, r18
 998:	20 81       	ld	r18, Z
 99a:	31 81       	ldd	r19, Z+1	; 0x01
 99c:	21 50       	subi	r18, 0x01	; 1
 99e:	31 09       	sbc	r19, r1
 9a0:	fc 01       	movw	r30, r24
 9a2:	31 83       	std	Z+1, r19	; 0x01
 9a4:	20 83       	st	Z, r18
 9a6:	d2 cf       	rjmp	.-92     	; 0x94c <__stack+0x4d>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 9a8:	8e 01       	movw	r16, r28
 9aa:	09 5b       	subi	r16, 0xB9	; 185
 9ac:	1f 4f       	sbci	r17, 0xFF	; 255
 9ae:	ce 01       	movw	r24, r28
 9b0:	8d 5b       	subi	r24, 0xBD	; 189
 9b2:	9f 4f       	sbci	r25, 0xFF	; 255
 9b4:	fc 01       	movw	r30, r24
 9b6:	60 81       	ld	r22, Z
 9b8:	71 81       	ldd	r23, Z+1	; 0x01
 9ba:	82 81       	ldd	r24, Z+2	; 0x02
 9bc:	93 81       	ldd	r25, Z+3	; 0x03
 9be:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 9c2:	dc 01       	movw	r26, r24
 9c4:	cb 01       	movw	r24, r22
 9c6:	f8 01       	movw	r30, r16
 9c8:	91 83       	std	Z+1, r25	; 0x01
 9ca:	80 83       	st	Z, r24
 9cc:	ce 01       	movw	r24, r28
 9ce:	85 5b       	subi	r24, 0xB5	; 181
 9d0:	9f 4f       	sbci	r25, 0xFF	; 255
 9d2:	9e 01       	movw	r18, r28
 9d4:	29 5b       	subi	r18, 0xB9	; 185
 9d6:	3f 4f       	sbci	r19, 0xFF	; 255
 9d8:	f9 01       	movw	r30, r18
 9da:	20 81       	ld	r18, Z
 9dc:	31 81       	ldd	r19, Z+1	; 0x01
 9de:	fc 01       	movw	r30, r24
 9e0:	31 83       	std	Z+1, r19	; 0x01
 9e2:	20 83       	st	Z, r18
 9e4:	ce 01       	movw	r24, r28
 9e6:	85 5b       	subi	r24, 0xB5	; 181
 9e8:	9f 4f       	sbci	r25, 0xFF	; 255
 9ea:	fc 01       	movw	r30, r24
 9ec:	80 81       	ld	r24, Z
 9ee:	91 81       	ldd	r25, Z+1	; 0x01
 9f0:	01 97       	sbiw	r24, 0x01	; 1
 9f2:	f1 f7       	brne	.-4      	; 0x9f0 <__stack+0xf1>
 9f4:	9e 01       	movw	r18, r28
 9f6:	25 5b       	subi	r18, 0xB5	; 181
 9f8:	3f 4f       	sbci	r19, 0xFF	; 255
 9fa:	f9 01       	movw	r30, r18
 9fc:	91 83       	std	Z+1, r25	; 0x01
 9fe:	80 83       	st	Z, r24
	_delay_ms(delay_time);
	PORTD = seq[6];
 a00:	8b e2       	ldi	r24, 0x2B	; 43
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__data_start+0xc>
 a08:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__data_start+0xd>
 a0c:	fc 01       	movw	r30, r24
 a0e:	20 83       	st	Z, r18
	PORTB = 1;
 a10:	85 e2       	ldi	r24, 0x25	; 37
 a12:	90 e0       	ldi	r25, 0x00	; 0
 a14:	21 e0       	ldi	r18, 0x01	; 1
 a16:	fc 01       	movw	r30, r24
 a18:	20 83       	st	Z, r18
 a1a:	80 e0       	ldi	r24, 0x00	; 0
 a1c:	90 e0       	ldi	r25, 0x00	; 0
 a1e:	aa e7       	ldi	r26, 0x7A	; 122
 a20:	b4 e4       	ldi	r27, 0x44	; 68
 a22:	89 8f       	std	Y+25, r24	; 0x19
 a24:	9a 8f       	std	Y+26, r25	; 0x1a
 a26:	ab 8f       	std	Y+27, r26	; 0x1b
 a28:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 a2a:	20 e0       	ldi	r18, 0x00	; 0
 a2c:	30 e0       	ldi	r19, 0x00	; 0
 a2e:	4a e7       	ldi	r20, 0x7A	; 122
 a30:	55 e4       	ldi	r21, 0x45	; 69
 a32:	69 8d       	ldd	r22, Y+25	; 0x19
 a34:	7a 8d       	ldd	r23, Y+26	; 0x1a
 a36:	8b 8d       	ldd	r24, Y+27	; 0x1b
 a38:	9c 8d       	ldd	r25, Y+28	; 0x1c
 a3a:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 a3e:	dc 01       	movw	r26, r24
 a40:	cb 01       	movw	r24, r22
 a42:	89 af       	std	Y+57, r24	; 0x39
 a44:	9a af       	std	Y+58, r25	; 0x3a
 a46:	ab af       	std	Y+59, r26	; 0x3b
 a48:	bc af       	std	Y+60, r27	; 0x3c
	if (__tmp < 1.0)
 a4a:	20 e0       	ldi	r18, 0x00	; 0
 a4c:	30 e0       	ldi	r19, 0x00	; 0
 a4e:	40 e8       	ldi	r20, 0x80	; 128
 a50:	5f e3       	ldi	r21, 0x3F	; 63
 a52:	69 ad       	ldd	r22, Y+57	; 0x39
 a54:	7a ad       	ldd	r23, Y+58	; 0x3a
 a56:	8b ad       	ldd	r24, Y+59	; 0x3b
 a58:	9c ad       	ldd	r25, Y+60	; 0x3c
 a5a:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
 a5e:	88 23       	and	r24, r24
 a60:	2c f4       	brge	.+10     	; 0xa6c <__stack+0x16d>
		__ticks = 1;
 a62:	81 e0       	ldi	r24, 0x01	; 1
 a64:	90 e0       	ldi	r25, 0x00	; 0
 a66:	9e af       	std	Y+62, r25	; 0x3e
 a68:	8d af       	std	Y+61, r24	; 0x3d
 a6a:	48 c0       	rjmp	.+144    	; 0xafc <__stack+0x1fd>
	else if (__tmp > 65535)
 a6c:	20 e0       	ldi	r18, 0x00	; 0
 a6e:	3f ef       	ldi	r19, 0xFF	; 255
 a70:	4f e7       	ldi	r20, 0x7F	; 127
 a72:	57 e4       	ldi	r21, 0x47	; 71
 a74:	69 ad       	ldd	r22, Y+57	; 0x39
 a76:	7a ad       	ldd	r23, Y+58	; 0x3a
 a78:	8b ad       	ldd	r24, Y+59	; 0x3b
 a7a:	9c ad       	ldd	r25, Y+60	; 0x3c
 a7c:	0e 94 13 07 	call	0xe26	; 0xe26 <__gesf2>
 a80:	18 16       	cp	r1, r24
 a82:	94 f5       	brge	.+100    	; 0xae8 <__stack+0x1e9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 a84:	20 e0       	ldi	r18, 0x00	; 0
 a86:	30 e0       	ldi	r19, 0x00	; 0
 a88:	40 e2       	ldi	r20, 0x20	; 32
 a8a:	51 e4       	ldi	r21, 0x41	; 65
 a8c:	69 8d       	ldd	r22, Y+25	; 0x19
 a8e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 a90:	8b 8d       	ldd	r24, Y+27	; 0x1b
 a92:	9c 8d       	ldd	r25, Y+28	; 0x1c
 a94:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 a98:	dc 01       	movw	r26, r24
 a9a:	cb 01       	movw	r24, r22
 a9c:	bc 01       	movw	r22, r24
 a9e:	cd 01       	movw	r24, r26
 aa0:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 aa4:	dc 01       	movw	r26, r24
 aa6:	cb 01       	movw	r24, r22
 aa8:	9e af       	std	Y+62, r25	; 0x3e
 aaa:	8d af       	std	Y+61, r24	; 0x3d
		while(__ticks)
 aac:	8d ad       	ldd	r24, Y+61	; 0x3d
 aae:	9e ad       	ldd	r25, Y+62	; 0x3e
 ab0:	89 2b       	or	r24, r25
 ab2:	d1 f1       	breq	.+116    	; 0xb28 <__stack+0x229>
 ab4:	20 e9       	ldi	r18, 0x90	; 144
 ab6:	31 e0       	ldi	r19, 0x01	; 1
 ab8:	ce 01       	movw	r24, r28
 aba:	cf 96       	adiw	r24, 0x3f	; 63
 abc:	fc 01       	movw	r30, r24
 abe:	31 83       	std	Z+1, r19	; 0x01
 ac0:	20 83       	st	Z, r18
 ac2:	ce 01       	movw	r24, r28
 ac4:	cf 96       	adiw	r24, 0x3f	; 63
 ac6:	fc 01       	movw	r30, r24
 ac8:	80 81       	ld	r24, Z
 aca:	91 81       	ldd	r25, Z+1	; 0x01
 acc:	01 97       	sbiw	r24, 0x01	; 1
 ace:	f1 f7       	brne	.-4      	; 0xacc <__stack+0x1cd>
 ad0:	9e 01       	movw	r18, r28
 ad2:	21 5c       	subi	r18, 0xC1	; 193
 ad4:	3f 4f       	sbci	r19, 0xFF	; 255
 ad6:	f9 01       	movw	r30, r18
 ad8:	91 83       	std	Z+1, r25	; 0x01
 ada:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 adc:	8d ad       	ldd	r24, Y+61	; 0x3d
 ade:	9e ad       	ldd	r25, Y+62	; 0x3e
 ae0:	01 97       	sbiw	r24, 0x01	; 1
 ae2:	9e af       	std	Y+62, r25	; 0x3e
 ae4:	8d af       	std	Y+61, r24	; 0x3d
 ae6:	e2 cf       	rjmp	.-60     	; 0xaac <__stack+0x1ad>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 ae8:	69 ad       	ldd	r22, Y+57	; 0x39
 aea:	7a ad       	ldd	r23, Y+58	; 0x3a
 aec:	8b ad       	ldd	r24, Y+59	; 0x3b
 aee:	9c ad       	ldd	r25, Y+60	; 0x3c
 af0:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 af4:	dc 01       	movw	r26, r24
 af6:	cb 01       	movw	r24, r22
 af8:	9e af       	std	Y+62, r25	; 0x3e
 afa:	8d af       	std	Y+61, r24	; 0x3d
 afc:	ce 01       	movw	r24, r28
 afe:	8f 5b       	subi	r24, 0xBF	; 191
 b00:	9f 4f       	sbci	r25, 0xFF	; 255
 b02:	2d ad       	ldd	r18, Y+61	; 0x3d
 b04:	3e ad       	ldd	r19, Y+62	; 0x3e
 b06:	fc 01       	movw	r30, r24
 b08:	31 83       	std	Z+1, r19	; 0x01
 b0a:	20 83       	st	Z, r18
 b0c:	ce 01       	movw	r24, r28
 b0e:	8f 5b       	subi	r24, 0xBF	; 191
 b10:	9f 4f       	sbci	r25, 0xFF	; 255
 b12:	fc 01       	movw	r30, r24
 b14:	80 81       	ld	r24, Z
 b16:	91 81       	ldd	r25, Z+1	; 0x01
 b18:	01 97       	sbiw	r24, 0x01	; 1
 b1a:	f1 f7       	brne	.-4      	; 0xb18 <__stack+0x219>
 b1c:	9e 01       	movw	r18, r28
 b1e:	2f 5b       	subi	r18, 0xBF	; 191
 b20:	3f 4f       	sbci	r19, 0xFF	; 255
 b22:	f9 01       	movw	r30, r18
 b24:	91 83       	std	Z+1, r25	; 0x01
 b26:	80 83       	st	Z, r24
	_delay_ms(delay_time);
	PORTD = seq[7];
 b28:	8b e2       	ldi	r24, 0x2B	; 43
 b2a:	90 e0       	ldi	r25, 0x00	; 0
 b2c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__data_start+0xe>
 b30:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__data_start+0xf>
 b34:	fc 01       	movw	r30, r24
 b36:	20 83       	st	Z, r18
	PORTB = 2;
 b38:	85 e2       	ldi	r24, 0x25	; 37
 b3a:	90 e0       	ldi	r25, 0x00	; 0
 b3c:	22 e0       	ldi	r18, 0x02	; 2
 b3e:	fc 01       	movw	r30, r24
 b40:	20 83       	st	Z, r18
 b42:	80 e0       	ldi	r24, 0x00	; 0
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	aa e7       	ldi	r26, 0x7A	; 122
 b48:	b4 e4       	ldi	r27, 0x44	; 68
 b4a:	8d 8f       	std	Y+29, r24	; 0x1d
 b4c:	9e 8f       	std	Y+30, r25	; 0x1e
 b4e:	af 8f       	std	Y+31, r26	; 0x1f
 b50:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 b52:	20 e0       	ldi	r18, 0x00	; 0
 b54:	30 e0       	ldi	r19, 0x00	; 0
 b56:	4a e7       	ldi	r20, 0x7A	; 122
 b58:	55 e4       	ldi	r21, 0x45	; 69
 b5a:	6d 8d       	ldd	r22, Y+29	; 0x1d
 b5c:	7e 8d       	ldd	r23, Y+30	; 0x1e
 b5e:	8f 8d       	ldd	r24, Y+31	; 0x1f
 b60:	98 a1       	ldd	r25, Y+32	; 0x20
 b62:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 b66:	dc 01       	movw	r26, r24
 b68:	cb 01       	movw	r24, r22
 b6a:	8f a7       	std	Y+47, r24	; 0x2f
 b6c:	98 ab       	std	Y+48, r25	; 0x30
 b6e:	a9 ab       	std	Y+49, r26	; 0x31
 b70:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
 b72:	20 e0       	ldi	r18, 0x00	; 0
 b74:	30 e0       	ldi	r19, 0x00	; 0
 b76:	40 e8       	ldi	r20, 0x80	; 128
 b78:	5f e3       	ldi	r21, 0x3F	; 63
 b7a:	6f a5       	ldd	r22, Y+47	; 0x2f
 b7c:	78 a9       	ldd	r23, Y+48	; 0x30
 b7e:	89 a9       	ldd	r24, Y+49	; 0x31
 b80:	9a a9       	ldd	r25, Y+50	; 0x32
 b82:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
 b86:	88 23       	and	r24, r24
 b88:	2c f4       	brge	.+10     	; 0xb94 <__stack+0x295>
		__ticks = 1;
 b8a:	81 e0       	ldi	r24, 0x01	; 1
 b8c:	90 e0       	ldi	r25, 0x00	; 0
 b8e:	9c ab       	std	Y+52, r25	; 0x34
 b90:	8b ab       	std	Y+51, r24	; 0x33
 b92:	3e c0       	rjmp	.+124    	; 0xc10 <__stack+0x311>
	else if (__tmp > 65535)
 b94:	20 e0       	ldi	r18, 0x00	; 0
 b96:	3f ef       	ldi	r19, 0xFF	; 255
 b98:	4f e7       	ldi	r20, 0x7F	; 127
 b9a:	57 e4       	ldi	r21, 0x47	; 71
 b9c:	6f a5       	ldd	r22, Y+47	; 0x2f
 b9e:	78 a9       	ldd	r23, Y+48	; 0x30
 ba0:	89 a9       	ldd	r24, Y+49	; 0x31
 ba2:	9a a9       	ldd	r25, Y+50	; 0x32
 ba4:	0e 94 13 07 	call	0xe26	; 0xe26 <__gesf2>
 ba8:	18 16       	cp	r1, r24
 baa:	44 f5       	brge	.+80     	; 0xbfc <__stack+0x2fd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 bac:	20 e0       	ldi	r18, 0x00	; 0
 bae:	30 e0       	ldi	r19, 0x00	; 0
 bb0:	40 e2       	ldi	r20, 0x20	; 32
 bb2:	51 e4       	ldi	r21, 0x41	; 65
 bb4:	6d 8d       	ldd	r22, Y+29	; 0x1d
 bb6:	7e 8d       	ldd	r23, Y+30	; 0x1e
 bb8:	8f 8d       	ldd	r24, Y+31	; 0x1f
 bba:	98 a1       	ldd	r25, Y+32	; 0x20
 bbc:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 bc0:	dc 01       	movw	r26, r24
 bc2:	cb 01       	movw	r24, r22
 bc4:	bc 01       	movw	r22, r24
 bc6:	cd 01       	movw	r24, r26
 bc8:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 bcc:	dc 01       	movw	r26, r24
 bce:	cb 01       	movw	r24, r22
 bd0:	9c ab       	std	Y+52, r25	; 0x34
 bd2:	8b ab       	std	Y+51, r24	; 0x33
		while(__ticks)
 bd4:	8b a9       	ldd	r24, Y+51	; 0x33
 bd6:	9c a9       	ldd	r25, Y+52	; 0x34
 bd8:	89 2b       	or	r24, r25
 bda:	21 f1       	breq	.+72     	; 0xc24 <__stack+0x325>
 bdc:	80 e9       	ldi	r24, 0x90	; 144
 bde:	91 e0       	ldi	r25, 0x01	; 1
 be0:	9e ab       	std	Y+54, r25	; 0x36
 be2:	8d ab       	std	Y+53, r24	; 0x35
 be4:	8d a9       	ldd	r24, Y+53	; 0x35
 be6:	9e a9       	ldd	r25, Y+54	; 0x36
 be8:	01 97       	sbiw	r24, 0x01	; 1
 bea:	f1 f7       	brne	.-4      	; 0xbe8 <__stack+0x2e9>
 bec:	9e ab       	std	Y+54, r25	; 0x36
 bee:	8d ab       	std	Y+53, r24	; 0x35
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 bf0:	8b a9       	ldd	r24, Y+51	; 0x33
 bf2:	9c a9       	ldd	r25, Y+52	; 0x34
 bf4:	01 97       	sbiw	r24, 0x01	; 1
 bf6:	9c ab       	std	Y+52, r25	; 0x34
 bf8:	8b ab       	std	Y+51, r24	; 0x33
 bfa:	ec cf       	rjmp	.-40     	; 0xbd4 <__stack+0x2d5>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 bfc:	6f a5       	ldd	r22, Y+47	; 0x2f
 bfe:	78 a9       	ldd	r23, Y+48	; 0x30
 c00:	89 a9       	ldd	r24, Y+49	; 0x31
 c02:	9a a9       	ldd	r25, Y+50	; 0x32
 c04:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 c08:	dc 01       	movw	r26, r24
 c0a:	cb 01       	movw	r24, r22
 c0c:	9c ab       	std	Y+52, r25	; 0x34
 c0e:	8b ab       	std	Y+51, r24	; 0x33
 c10:	8b a9       	ldd	r24, Y+51	; 0x33
 c12:	9c a9       	ldd	r25, Y+52	; 0x34
 c14:	98 af       	std	Y+56, r25	; 0x38
 c16:	8f ab       	std	Y+55, r24	; 0x37
 c18:	8f a9       	ldd	r24, Y+55	; 0x37
 c1a:	98 ad       	ldd	r25, Y+56	; 0x38
 c1c:	01 97       	sbiw	r24, 0x01	; 1
 c1e:	f1 f7       	brne	.-4      	; 0xc1c <__stack+0x31d>
 c20:	98 af       	std	Y+56, r25	; 0x38
 c22:	8f ab       	std	Y+55, r24	; 0x37
	_delay_ms(delay_time);
	PORTD = seq[8];
 c24:	8b e2       	ldi	r24, 0x2B	; 43
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__data_start+0x10>
 c2c:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__data_start+0x11>
 c30:	fc 01       	movw	r30, r24
 c32:	20 83       	st	Z, r18
	PORTB = 4;
 c34:	85 e2       	ldi	r24, 0x25	; 37
 c36:	90 e0       	ldi	r25, 0x00	; 0
 c38:	24 e0       	ldi	r18, 0x04	; 4
 c3a:	fc 01       	movw	r30, r24
 c3c:	20 83       	st	Z, r18
 c3e:	80 e0       	ldi	r24, 0x00	; 0
 c40:	90 e0       	ldi	r25, 0x00	; 0
 c42:	aa e7       	ldi	r26, 0x7A	; 122
 c44:	b4 e4       	ldi	r27, 0x44	; 68
 c46:	89 a3       	std	Y+33, r24	; 0x21
 c48:	9a a3       	std	Y+34, r25	; 0x22
 c4a:	ab a3       	std	Y+35, r26	; 0x23
 c4c:	bc a3       	std	Y+36, r27	; 0x24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 c4e:	20 e0       	ldi	r18, 0x00	; 0
 c50:	30 e0       	ldi	r19, 0x00	; 0
 c52:	4a e7       	ldi	r20, 0x7A	; 122
 c54:	55 e4       	ldi	r21, 0x45	; 69
 c56:	69 a1       	ldd	r22, Y+33	; 0x21
 c58:	7a a1       	ldd	r23, Y+34	; 0x22
 c5a:	8b a1       	ldd	r24, Y+35	; 0x23
 c5c:	9c a1       	ldd	r25, Y+36	; 0x24
 c5e:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 c62:	dc 01       	movw	r26, r24
 c64:	cb 01       	movw	r24, r22
 c66:	8d a3       	std	Y+37, r24	; 0x25
 c68:	9e a3       	std	Y+38, r25	; 0x26
 c6a:	af a3       	std	Y+39, r26	; 0x27
 c6c:	b8 a7       	std	Y+40, r27	; 0x28
	if (__tmp < 1.0)
 c6e:	20 e0       	ldi	r18, 0x00	; 0
 c70:	30 e0       	ldi	r19, 0x00	; 0
 c72:	40 e8       	ldi	r20, 0x80	; 128
 c74:	5f e3       	ldi	r21, 0x3F	; 63
 c76:	6d a1       	ldd	r22, Y+37	; 0x25
 c78:	7e a1       	ldd	r23, Y+38	; 0x26
 c7a:	8f a1       	ldd	r24, Y+39	; 0x27
 c7c:	98 a5       	ldd	r25, Y+40	; 0x28
 c7e:	0e 94 92 06 	call	0xd24	; 0xd24 <__cmpsf2>
 c82:	88 23       	and	r24, r24
 c84:	2c f4       	brge	.+10     	; 0xc90 <__stack+0x391>
		__ticks = 1;
 c86:	81 e0       	ldi	r24, 0x01	; 1
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	9a a7       	std	Y+42, r25	; 0x2a
 c8c:	89 a7       	std	Y+41, r24	; 0x29
 c8e:	3f c0       	rjmp	.+126    	; 0xd0e <__stack+0x40f>
	else if (__tmp > 65535)
 c90:	20 e0       	ldi	r18, 0x00	; 0
 c92:	3f ef       	ldi	r19, 0xFF	; 255
 c94:	4f e7       	ldi	r20, 0x7F	; 127
 c96:	57 e4       	ldi	r21, 0x47	; 71
 c98:	6d a1       	ldd	r22, Y+37	; 0x25
 c9a:	7e a1       	ldd	r23, Y+38	; 0x26
 c9c:	8f a1       	ldd	r24, Y+39	; 0x27
 c9e:	98 a5       	ldd	r25, Y+40	; 0x28
 ca0:	0e 94 13 07 	call	0xe26	; 0xe26 <__gesf2>
 ca4:	18 16       	cp	r1, r24
 ca6:	4c f5       	brge	.+82     	; 0xcfa <__stack+0x3fb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 ca8:	20 e0       	ldi	r18, 0x00	; 0
 caa:	30 e0       	ldi	r19, 0x00	; 0
 cac:	40 e2       	ldi	r20, 0x20	; 32
 cae:	51 e4       	ldi	r21, 0x41	; 65
 cb0:	69 a1       	ldd	r22, Y+33	; 0x21
 cb2:	7a a1       	ldd	r23, Y+34	; 0x22
 cb4:	8b a1       	ldd	r24, Y+35	; 0x23
 cb6:	9c a1       	ldd	r25, Y+36	; 0x24
 cb8:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3>
 cbc:	dc 01       	movw	r26, r24
 cbe:	cb 01       	movw	r24, r22
 cc0:	bc 01       	movw	r22, r24
 cc2:	cd 01       	movw	r24, r26
 cc4:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 cc8:	dc 01       	movw	r26, r24
 cca:	cb 01       	movw	r24, r22
 ccc:	9a a7       	std	Y+42, r25	; 0x2a
 cce:	89 a7       	std	Y+41, r24	; 0x29
		while(__ticks)
 cd0:	89 a5       	ldd	r24, Y+41	; 0x29
 cd2:	9a a5       	ldd	r25, Y+42	; 0x2a
 cd4:	89 2b       	or	r24, r25
 cd6:	09 f4       	brne	.+2      	; 0xcda <__stack+0x3db>
 cd8:	f5 c9       	rjmp	.-3094   	; 0xc4 <main+0x2e>
 cda:	80 e9       	ldi	r24, 0x90	; 144
 cdc:	91 e0       	ldi	r25, 0x01	; 1
 cde:	9c a7       	std	Y+44, r25	; 0x2c
 ce0:	8b a7       	std	Y+43, r24	; 0x2b
 ce2:	8b a5       	ldd	r24, Y+43	; 0x2b
 ce4:	9c a5       	ldd	r25, Y+44	; 0x2c
 ce6:	01 97       	sbiw	r24, 0x01	; 1
 ce8:	f1 f7       	brne	.-4      	; 0xce6 <__stack+0x3e7>
 cea:	9c a7       	std	Y+44, r25	; 0x2c
 cec:	8b a7       	std	Y+43, r24	; 0x2b
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 cee:	89 a5       	ldd	r24, Y+41	; 0x29
 cf0:	9a a5       	ldd	r25, Y+42	; 0x2a
 cf2:	01 97       	sbiw	r24, 0x01	; 1
 cf4:	9a a7       	std	Y+42, r25	; 0x2a
 cf6:	89 a7       	std	Y+41, r24	; 0x29
 cf8:	eb cf       	rjmp	.-42     	; 0xcd0 <__stack+0x3d1>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 cfa:	6d a1       	ldd	r22, Y+37	; 0x25
 cfc:	7e a1       	ldd	r23, Y+38	; 0x26
 cfe:	8f a1       	ldd	r24, Y+39	; 0x27
 d00:	98 a5       	ldd	r25, Y+40	; 0x28
 d02:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixunssfsi>
 d06:	dc 01       	movw	r26, r24
 d08:	cb 01       	movw	r24, r22
 d0a:	9a a7       	std	Y+42, r25	; 0x2a
 d0c:	89 a7       	std	Y+41, r24	; 0x29
 d0e:	89 a5       	ldd	r24, Y+41	; 0x29
 d10:	9a a5       	ldd	r25, Y+42	; 0x2a
 d12:	9e a7       	std	Y+46, r25	; 0x2e
 d14:	8d a7       	std	Y+45, r24	; 0x2d
 d16:	8d a5       	ldd	r24, Y+45	; 0x2d
 d18:	9e a5       	ldd	r25, Y+46	; 0x2e
 d1a:	01 97       	sbiw	r24, 0x01	; 1
 d1c:	f1 f7       	brne	.-4      	; 0xd1a <__stack+0x41b>
 d1e:	9e a7       	std	Y+46, r25	; 0x2e
 d20:	8d a7       	std	Y+45, r24	; 0x2d
int main(void)
{
    DDRB = 0xFF;
	DDRD = 0xFF;
	/* Replace with your application code */
    while (1) 
 d22:	d0 c9       	rjmp	.-3168   	; 0xc4 <main+0x2e>

00000d24 <__cmpsf2>:
 d24:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__fp_cmp>
 d28:	08 f4       	brcc	.+2      	; 0xd2c <__cmpsf2+0x8>
 d2a:	81 e0       	ldi	r24, 0x01	; 1
 d2c:	08 95       	ret

00000d2e <__fixunssfsi>:
 d2e:	0e 94 f2 06 	call	0xde4	; 0xde4 <__fp_splitA>
 d32:	88 f0       	brcs	.+34     	; 0xd56 <__fixunssfsi+0x28>
 d34:	9f 57       	subi	r25, 0x7F	; 127
 d36:	98 f0       	brcs	.+38     	; 0xd5e <__fixunssfsi+0x30>
 d38:	b9 2f       	mov	r27, r25
 d3a:	99 27       	eor	r25, r25
 d3c:	b7 51       	subi	r27, 0x17	; 23
 d3e:	b0 f0       	brcs	.+44     	; 0xd6c <__fixunssfsi+0x3e>
 d40:	e1 f0       	breq	.+56     	; 0xd7a <__fixunssfsi+0x4c>
 d42:	66 0f       	add	r22, r22
 d44:	77 1f       	adc	r23, r23
 d46:	88 1f       	adc	r24, r24
 d48:	99 1f       	adc	r25, r25
 d4a:	1a f0       	brmi	.+6      	; 0xd52 <__fixunssfsi+0x24>
 d4c:	ba 95       	dec	r27
 d4e:	c9 f7       	brne	.-14     	; 0xd42 <__fixunssfsi+0x14>
 d50:	14 c0       	rjmp	.+40     	; 0xd7a <__fixunssfsi+0x4c>
 d52:	b1 30       	cpi	r27, 0x01	; 1
 d54:	91 f0       	breq	.+36     	; 0xd7a <__fixunssfsi+0x4c>
 d56:	0e 94 0c 07 	call	0xe18	; 0xe18 <__fp_zero>
 d5a:	b1 e0       	ldi	r27, 0x01	; 1
 d5c:	08 95       	ret
 d5e:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__fp_zero>
 d62:	67 2f       	mov	r22, r23
 d64:	78 2f       	mov	r23, r24
 d66:	88 27       	eor	r24, r24
 d68:	b8 5f       	subi	r27, 0xF8	; 248
 d6a:	39 f0       	breq	.+14     	; 0xd7a <__fixunssfsi+0x4c>
 d6c:	b9 3f       	cpi	r27, 0xF9	; 249
 d6e:	cc f3       	brlt	.-14     	; 0xd62 <__fixunssfsi+0x34>
 d70:	86 95       	lsr	r24
 d72:	77 95       	ror	r23
 d74:	67 95       	ror	r22
 d76:	b3 95       	inc	r27
 d78:	d9 f7       	brne	.-10     	; 0xd70 <__fixunssfsi+0x42>
 d7a:	3e f4       	brtc	.+14     	; 0xd8a <__fixunssfsi+0x5c>
 d7c:	90 95       	com	r25
 d7e:	80 95       	com	r24
 d80:	70 95       	com	r23
 d82:	61 95       	neg	r22
 d84:	7f 4f       	sbci	r23, 0xFF	; 255
 d86:	8f 4f       	sbci	r24, 0xFF	; 255
 d88:	9f 4f       	sbci	r25, 0xFF	; 255
 d8a:	08 95       	ret

00000d8c <__fp_cmp>:
 d8c:	99 0f       	add	r25, r25
 d8e:	00 08       	sbc	r0, r0
 d90:	55 0f       	add	r21, r21
 d92:	aa 0b       	sbc	r26, r26
 d94:	e0 e8       	ldi	r30, 0x80	; 128
 d96:	fe ef       	ldi	r31, 0xFE	; 254
 d98:	16 16       	cp	r1, r22
 d9a:	17 06       	cpc	r1, r23
 d9c:	e8 07       	cpc	r30, r24
 d9e:	f9 07       	cpc	r31, r25
 da0:	c0 f0       	brcs	.+48     	; 0xdd2 <__fp_cmp+0x46>
 da2:	12 16       	cp	r1, r18
 da4:	13 06       	cpc	r1, r19
 da6:	e4 07       	cpc	r30, r20
 da8:	f5 07       	cpc	r31, r21
 daa:	98 f0       	brcs	.+38     	; 0xdd2 <__fp_cmp+0x46>
 dac:	62 1b       	sub	r22, r18
 dae:	73 0b       	sbc	r23, r19
 db0:	84 0b       	sbc	r24, r20
 db2:	95 0b       	sbc	r25, r21
 db4:	39 f4       	brne	.+14     	; 0xdc4 <__fp_cmp+0x38>
 db6:	0a 26       	eor	r0, r26
 db8:	61 f0       	breq	.+24     	; 0xdd2 <__fp_cmp+0x46>
 dba:	23 2b       	or	r18, r19
 dbc:	24 2b       	or	r18, r20
 dbe:	25 2b       	or	r18, r21
 dc0:	21 f4       	brne	.+8      	; 0xdca <__fp_cmp+0x3e>
 dc2:	08 95       	ret
 dc4:	0a 26       	eor	r0, r26
 dc6:	09 f4       	brne	.+2      	; 0xdca <__fp_cmp+0x3e>
 dc8:	a1 40       	sbci	r26, 0x01	; 1
 dca:	a6 95       	lsr	r26
 dcc:	8f ef       	ldi	r24, 0xFF	; 255
 dce:	81 1d       	adc	r24, r1
 dd0:	81 1d       	adc	r24, r1
 dd2:	08 95       	ret

00000dd4 <__fp_split3>:
 dd4:	57 fd       	sbrc	r21, 7
 dd6:	90 58       	subi	r25, 0x80	; 128
 dd8:	44 0f       	add	r20, r20
 dda:	55 1f       	adc	r21, r21
 ddc:	59 f0       	breq	.+22     	; 0xdf4 <__fp_splitA+0x10>
 dde:	5f 3f       	cpi	r21, 0xFF	; 255
 de0:	71 f0       	breq	.+28     	; 0xdfe <__fp_splitA+0x1a>
 de2:	47 95       	ror	r20

00000de4 <__fp_splitA>:
 de4:	88 0f       	add	r24, r24
 de6:	97 fb       	bst	r25, 7
 de8:	99 1f       	adc	r25, r25
 dea:	61 f0       	breq	.+24     	; 0xe04 <__fp_splitA+0x20>
 dec:	9f 3f       	cpi	r25, 0xFF	; 255
 dee:	79 f0       	breq	.+30     	; 0xe0e <__fp_splitA+0x2a>
 df0:	87 95       	ror	r24
 df2:	08 95       	ret
 df4:	12 16       	cp	r1, r18
 df6:	13 06       	cpc	r1, r19
 df8:	14 06       	cpc	r1, r20
 dfa:	55 1f       	adc	r21, r21
 dfc:	f2 cf       	rjmp	.-28     	; 0xde2 <__fp_split3+0xe>
 dfe:	46 95       	lsr	r20
 e00:	f1 df       	rcall	.-30     	; 0xde4 <__fp_splitA>
 e02:	08 c0       	rjmp	.+16     	; 0xe14 <__fp_splitA+0x30>
 e04:	16 16       	cp	r1, r22
 e06:	17 06       	cpc	r1, r23
 e08:	18 06       	cpc	r1, r24
 e0a:	99 1f       	adc	r25, r25
 e0c:	f1 cf       	rjmp	.-30     	; 0xdf0 <__fp_splitA+0xc>
 e0e:	86 95       	lsr	r24
 e10:	71 05       	cpc	r23, r1
 e12:	61 05       	cpc	r22, r1
 e14:	08 94       	sec
 e16:	08 95       	ret

00000e18 <__fp_zero>:
 e18:	e8 94       	clt

00000e1a <__fp_szero>:
 e1a:	bb 27       	eor	r27, r27
 e1c:	66 27       	eor	r22, r22
 e1e:	77 27       	eor	r23, r23
 e20:	cb 01       	movw	r24, r22
 e22:	97 f9       	bld	r25, 7
 e24:	08 95       	ret

00000e26 <__gesf2>:
 e26:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__fp_cmp>
 e2a:	08 f4       	brcc	.+2      	; 0xe2e <__gesf2+0x8>
 e2c:	8f ef       	ldi	r24, 0xFF	; 255
 e2e:	08 95       	ret

00000e30 <__mulsf3>:
 e30:	0e 94 2b 07 	call	0xe56	; 0xe56 <__mulsf3x>
 e34:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <__fp_round>
 e38:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__fp_pscA>
 e3c:	38 f0       	brcs	.+14     	; 0xe4c <__mulsf3+0x1c>
 e3e:	0e 94 95 07 	call	0xf2a	; 0xf2a <__fp_pscB>
 e42:	20 f0       	brcs	.+8      	; 0xe4c <__mulsf3+0x1c>
 e44:	95 23       	and	r25, r21
 e46:	11 f0       	breq	.+4      	; 0xe4c <__mulsf3+0x1c>
 e48:	0c 94 85 07 	jmp	0xf0a	; 0xf0a <__fp_inf>
 e4c:	0c 94 8b 07 	jmp	0xf16	; 0xf16 <__fp_nan>
 e50:	11 24       	eor	r1, r1
 e52:	0c 94 0d 07 	jmp	0xe1a	; 0xe1a <__fp_szero>

00000e56 <__mulsf3x>:
 e56:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__fp_split3>
 e5a:	70 f3       	brcs	.-36     	; 0xe38 <__mulsf3+0x8>

00000e5c <__mulsf3_pse>:
 e5c:	95 9f       	mul	r25, r21
 e5e:	c1 f3       	breq	.-16     	; 0xe50 <__mulsf3+0x20>
 e60:	95 0f       	add	r25, r21
 e62:	50 e0       	ldi	r21, 0x00	; 0
 e64:	55 1f       	adc	r21, r21
 e66:	62 9f       	mul	r22, r18
 e68:	f0 01       	movw	r30, r0
 e6a:	72 9f       	mul	r23, r18
 e6c:	bb 27       	eor	r27, r27
 e6e:	f0 0d       	add	r31, r0
 e70:	b1 1d       	adc	r27, r1
 e72:	63 9f       	mul	r22, r19
 e74:	aa 27       	eor	r26, r26
 e76:	f0 0d       	add	r31, r0
 e78:	b1 1d       	adc	r27, r1
 e7a:	aa 1f       	adc	r26, r26
 e7c:	64 9f       	mul	r22, r20
 e7e:	66 27       	eor	r22, r22
 e80:	b0 0d       	add	r27, r0
 e82:	a1 1d       	adc	r26, r1
 e84:	66 1f       	adc	r22, r22
 e86:	82 9f       	mul	r24, r18
 e88:	22 27       	eor	r18, r18
 e8a:	b0 0d       	add	r27, r0
 e8c:	a1 1d       	adc	r26, r1
 e8e:	62 1f       	adc	r22, r18
 e90:	73 9f       	mul	r23, r19
 e92:	b0 0d       	add	r27, r0
 e94:	a1 1d       	adc	r26, r1
 e96:	62 1f       	adc	r22, r18
 e98:	83 9f       	mul	r24, r19
 e9a:	a0 0d       	add	r26, r0
 e9c:	61 1d       	adc	r22, r1
 e9e:	22 1f       	adc	r18, r18
 ea0:	74 9f       	mul	r23, r20
 ea2:	33 27       	eor	r19, r19
 ea4:	a0 0d       	add	r26, r0
 ea6:	61 1d       	adc	r22, r1
 ea8:	23 1f       	adc	r18, r19
 eaa:	84 9f       	mul	r24, r20
 eac:	60 0d       	add	r22, r0
 eae:	21 1d       	adc	r18, r1
 eb0:	82 2f       	mov	r24, r18
 eb2:	76 2f       	mov	r23, r22
 eb4:	6a 2f       	mov	r22, r26
 eb6:	11 24       	eor	r1, r1
 eb8:	9f 57       	subi	r25, 0x7F	; 127
 eba:	50 40       	sbci	r21, 0x00	; 0
 ebc:	9a f0       	brmi	.+38     	; 0xee4 <__mulsf3_pse+0x88>
 ebe:	f1 f0       	breq	.+60     	; 0xefc <__mulsf3_pse+0xa0>
 ec0:	88 23       	and	r24, r24
 ec2:	4a f0       	brmi	.+18     	; 0xed6 <__mulsf3_pse+0x7a>
 ec4:	ee 0f       	add	r30, r30
 ec6:	ff 1f       	adc	r31, r31
 ec8:	bb 1f       	adc	r27, r27
 eca:	66 1f       	adc	r22, r22
 ecc:	77 1f       	adc	r23, r23
 ece:	88 1f       	adc	r24, r24
 ed0:	91 50       	subi	r25, 0x01	; 1
 ed2:	50 40       	sbci	r21, 0x00	; 0
 ed4:	a9 f7       	brne	.-22     	; 0xec0 <__mulsf3_pse+0x64>
 ed6:	9e 3f       	cpi	r25, 0xFE	; 254
 ed8:	51 05       	cpc	r21, r1
 eda:	80 f0       	brcs	.+32     	; 0xefc <__mulsf3_pse+0xa0>
 edc:	0c 94 85 07 	jmp	0xf0a	; 0xf0a <__fp_inf>
 ee0:	0c 94 0d 07 	jmp	0xe1a	; 0xe1a <__fp_szero>
 ee4:	5f 3f       	cpi	r21, 0xFF	; 255
 ee6:	e4 f3       	brlt	.-8      	; 0xee0 <__mulsf3_pse+0x84>
 ee8:	98 3e       	cpi	r25, 0xE8	; 232
 eea:	d4 f3       	brlt	.-12     	; 0xee0 <__mulsf3_pse+0x84>
 eec:	86 95       	lsr	r24
 eee:	77 95       	ror	r23
 ef0:	67 95       	ror	r22
 ef2:	b7 95       	ror	r27
 ef4:	f7 95       	ror	r31
 ef6:	e7 95       	ror	r30
 ef8:	9f 5f       	subi	r25, 0xFF	; 255
 efa:	c1 f7       	brne	.-16     	; 0xeec <__mulsf3_pse+0x90>
 efc:	fe 2b       	or	r31, r30
 efe:	88 0f       	add	r24, r24
 f00:	91 1d       	adc	r25, r1
 f02:	96 95       	lsr	r25
 f04:	87 95       	ror	r24
 f06:	97 f9       	bld	r25, 7
 f08:	08 95       	ret

00000f0a <__fp_inf>:
 f0a:	97 f9       	bld	r25, 7
 f0c:	9f 67       	ori	r25, 0x7F	; 127
 f0e:	80 e8       	ldi	r24, 0x80	; 128
 f10:	70 e0       	ldi	r23, 0x00	; 0
 f12:	60 e0       	ldi	r22, 0x00	; 0
 f14:	08 95       	ret

00000f16 <__fp_nan>:
 f16:	9f ef       	ldi	r25, 0xFF	; 255
 f18:	80 ec       	ldi	r24, 0xC0	; 192
 f1a:	08 95       	ret

00000f1c <__fp_pscA>:
 f1c:	00 24       	eor	r0, r0
 f1e:	0a 94       	dec	r0
 f20:	16 16       	cp	r1, r22
 f22:	17 06       	cpc	r1, r23
 f24:	18 06       	cpc	r1, r24
 f26:	09 06       	cpc	r0, r25
 f28:	08 95       	ret

00000f2a <__fp_pscB>:
 f2a:	00 24       	eor	r0, r0
 f2c:	0a 94       	dec	r0
 f2e:	12 16       	cp	r1, r18
 f30:	13 06       	cpc	r1, r19
 f32:	14 06       	cpc	r1, r20
 f34:	05 06       	cpc	r0, r21
 f36:	08 95       	ret

00000f38 <__fp_round>:
 f38:	09 2e       	mov	r0, r25
 f3a:	03 94       	inc	r0
 f3c:	00 0c       	add	r0, r0
 f3e:	11 f4       	brne	.+4      	; 0xf44 <__fp_round+0xc>
 f40:	88 23       	and	r24, r24
 f42:	52 f0       	brmi	.+20     	; 0xf58 <__fp_round+0x20>
 f44:	bb 0f       	add	r27, r27
 f46:	40 f4       	brcc	.+16     	; 0xf58 <__fp_round+0x20>
 f48:	bf 2b       	or	r27, r31
 f4a:	11 f4       	brne	.+4      	; 0xf50 <__fp_round+0x18>
 f4c:	60 ff       	sbrs	r22, 0
 f4e:	04 c0       	rjmp	.+8      	; 0xf58 <__fp_round+0x20>
 f50:	6f 5f       	subi	r22, 0xFF	; 255
 f52:	7f 4f       	sbci	r23, 0xFF	; 255
 f54:	8f 4f       	sbci	r24, 0xFF	; 255
 f56:	9f 4f       	sbci	r25, 0xFF	; 255
 f58:	08 95       	ret

00000f5a <_exit>:
 f5a:	f8 94       	cli

00000f5c <__stop_program>:
 f5c:	ff cf       	rjmp	.-2      	; 0xf5c <__stop_program>
