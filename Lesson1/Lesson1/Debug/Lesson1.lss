
Lesson1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000a20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009cc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000a20  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a50  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000955  00000000  00000000  00000ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000666  00000000  00000000  00001405  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000042d  00000000  00000000  00001a6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  00001e98  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000398  00000000  00000000  00001ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000062  00000000  00000000  00002270  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000022d2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#define F_CPU 16000000UL
#include <util/delay.h>


int main(void)
{
  80:	0f 93       	push	r16
  82:	1f 93       	push	r17
  84:	cf 93       	push	r28
  86:	df 93       	push	r29
  88:	cd b7       	in	r28, 0x3d	; 61
  8a:	de b7       	in	r29, 0x3e	; 62
  8c:	c6 55       	subi	r28, 0x56	; 86
  8e:	d1 09       	sbc	r29, r1
  90:	0f b6       	in	r0, 0x3f	; 63
  92:	f8 94       	cli
  94:	de bf       	out	0x3e, r29	; 62
  96:	0f be       	out	0x3f, r0	; 63
  98:	cd bf       	out	0x3d, r28	; 61
    DDRD = 0xFF;
  9a:	8a e2       	ldi	r24, 0x2A	; 42
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	2f ef       	ldi	r18, 0xFF	; 255
  a0:	fc 01       	movw	r30, r24
  a2:	20 83       	st	Z, r18
	int i = 0;
  a4:	1a 82       	std	Y+2, r1	; 0x02
  a6:	19 82       	std	Y+1, r1	; 0x01
	while (1) 
    {
		PORTD = 0b00000100;
  a8:	8b e2       	ldi	r24, 0x2B	; 43
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	24 e0       	ldi	r18, 0x04	; 4
  ae:	fc 01       	movw	r30, r24
  b0:	20 83       	st	Z, r18
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e8       	ldi	r25, 0x80	; 128
  b6:	ab e3       	ldi	r26, 0x3B	; 59
  b8:	b5 e4       	ldi	r27, 0x45	; 69
  ba:	8f 83       	std	Y+7, r24	; 0x07
  bc:	98 87       	std	Y+8, r25	; 0x08
  be:	a9 87       	std	Y+9, r26	; 0x09
  c0:	ba 87       	std	Y+10, r27	; 0x0a

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
  c2:	20 e0       	ldi	r18, 0x00	; 0
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	4a e7       	ldi	r20, 0x7A	; 122
  c8:	55 e4       	ldi	r21, 0x45	; 69
  ca:	6f 81       	ldd	r22, Y+7	; 0x07
  cc:	78 85       	ldd	r23, Y+8	; 0x08
  ce:	89 85       	ldd	r24, Y+9	; 0x09
  d0:	9a 85       	ldd	r25, Y+10	; 0x0a
  d2:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
  d6:	dc 01       	movw	r26, r24
  d8:	cb 01       	movw	r24, r22
  da:	8f a7       	std	Y+47, r24	; 0x2f
  dc:	98 ab       	std	Y+48, r25	; 0x30
  de:	a9 ab       	std	Y+49, r26	; 0x31
  e0:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	40 e8       	ldi	r20, 0x80	; 128
  e8:	5f e3       	ldi	r21, 0x3F	; 63
  ea:	6f a5       	ldd	r22, Y+47	; 0x2f
  ec:	78 a9       	ldd	r23, Y+48	; 0x30
  ee:	89 a9       	ldd	r24, Y+49	; 0x31
  f0:	9a a9       	ldd	r25, Y+50	; 0x32
  f2:	0e 94 c9 03 	call	0x792	; 0x792 <__cmpsf2>
  f6:	88 23       	and	r24, r24
  f8:	2c f4       	brge	.+10     	; 0x104 <main+0x84>
		__ticks = 1;
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	9c ab       	std	Y+52, r25	; 0x34
 100:	8b ab       	std	Y+51, r24	; 0x33
 102:	3e c0       	rjmp	.+124    	; 0x180 <main+0x100>
	else if (__tmp > 65535)
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	3f ef       	ldi	r19, 0xFF	; 255
 108:	4f e7       	ldi	r20, 0x7F	; 127
 10a:	57 e4       	ldi	r21, 0x47	; 71
 10c:	6f a5       	ldd	r22, Y+47	; 0x2f
 10e:	78 a9       	ldd	r23, Y+48	; 0x30
 110:	89 a9       	ldd	r24, Y+49	; 0x31
 112:	9a a9       	ldd	r25, Y+50	; 0x32
 114:	0e 94 4a 04 	call	0x894	; 0x894 <__gesf2>
 118:	18 16       	cp	r1, r24
 11a:	44 f5       	brge	.+80     	; 0x16c <main+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 11c:	20 e0       	ldi	r18, 0x00	; 0
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	40 e2       	ldi	r20, 0x20	; 32
 122:	51 e4       	ldi	r21, 0x41	; 65
 124:	6f 81       	ldd	r22, Y+7	; 0x07
 126:	78 85       	ldd	r23, Y+8	; 0x08
 128:	89 85       	ldd	r24, Y+9	; 0x09
 12a:	9a 85       	ldd	r25, Y+10	; 0x0a
 12c:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 130:	dc 01       	movw	r26, r24
 132:	cb 01       	movw	r24, r22
 134:	bc 01       	movw	r22, r24
 136:	cd 01       	movw	r24, r26
 138:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 13c:	dc 01       	movw	r26, r24
 13e:	cb 01       	movw	r24, r22
 140:	9c ab       	std	Y+52, r25	; 0x34
 142:	8b ab       	std	Y+51, r24	; 0x33
		while(__ticks)
 144:	8b a9       	ldd	r24, Y+51	; 0x33
 146:	9c a9       	ldd	r25, Y+52	; 0x34
 148:	89 2b       	or	r24, r25
 14a:	21 f1       	breq	.+72     	; 0x194 <main+0x114>
 14c:	80 e9       	ldi	r24, 0x90	; 144
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	9e ab       	std	Y+54, r25	; 0x36
 152:	8d ab       	std	Y+53, r24	; 0x35
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 154:	8d a9       	ldd	r24, Y+53	; 0x35
 156:	9e a9       	ldd	r25, Y+54	; 0x36
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <main+0xd8>
 15c:	9e ab       	std	Y+54, r25	; 0x36
 15e:	8d ab       	std	Y+53, r24	; 0x35
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 160:	8b a9       	ldd	r24, Y+51	; 0x33
 162:	9c a9       	ldd	r25, Y+52	; 0x34
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	9c ab       	std	Y+52, r25	; 0x34
 168:	8b ab       	std	Y+51, r24	; 0x33
 16a:	ec cf       	rjmp	.-40     	; 0x144 <main+0xc4>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 16c:	6f a5       	ldd	r22, Y+47	; 0x2f
 16e:	78 a9       	ldd	r23, Y+48	; 0x30
 170:	89 a9       	ldd	r24, Y+49	; 0x31
 172:	9a a9       	ldd	r25, Y+50	; 0x32
 174:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 178:	dc 01       	movw	r26, r24
 17a:	cb 01       	movw	r24, r22
 17c:	9c ab       	std	Y+52, r25	; 0x34
 17e:	8b ab       	std	Y+51, r24	; 0x33
 180:	8b a9       	ldd	r24, Y+51	; 0x33
 182:	9c a9       	ldd	r25, Y+52	; 0x34
 184:	98 af       	std	Y+56, r25	; 0x38
 186:	8f ab       	std	Y+55, r24	; 0x37
 188:	8f a9       	ldd	r24, Y+55	; 0x37
 18a:	98 ad       	ldd	r25, Y+56	; 0x38
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <main+0x10c>
 190:	98 af       	std	Y+56, r25	; 0x38
 192:	8f ab       	std	Y+55, r24	; 0x37
		_delay_ms(3000);
		
		PORTD = 0b00010000;
 194:	8b e2       	ldi	r24, 0x2B	; 43
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	20 e1       	ldi	r18, 0x10	; 16
 19a:	fc 01       	movw	r30, r24
 19c:	20 83       	st	Z, r18
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	aa ef       	ldi	r26, 0xFA	; 250
 1a4:	b3 e4       	ldi	r27, 0x43	; 67
 1a6:	8b 87       	std	Y+11, r24	; 0x0b
 1a8:	9c 87       	std	Y+12, r25	; 0x0c
 1aa:	ad 87       	std	Y+13, r26	; 0x0d
 1ac:	be 87       	std	Y+14, r27	; 0x0e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	4a e7       	ldi	r20, 0x7A	; 122
 1b4:	55 e4       	ldi	r21, 0x45	; 69
 1b6:	6b 85       	ldd	r22, Y+11	; 0x0b
 1b8:	7c 85       	ldd	r23, Y+12	; 0x0c
 1ba:	8d 85       	ldd	r24, Y+13	; 0x0d
 1bc:	9e 85       	ldd	r25, Y+14	; 0x0e
 1be:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 1c2:	dc 01       	movw	r26, r24
 1c4:	cb 01       	movw	r24, r22
 1c6:	8d a3       	std	Y+37, r24	; 0x25
 1c8:	9e a3       	std	Y+38, r25	; 0x26
 1ca:	af a3       	std	Y+39, r26	; 0x27
 1cc:	b8 a7       	std	Y+40, r27	; 0x28
	if (__tmp < 1.0)
 1ce:	20 e0       	ldi	r18, 0x00	; 0
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	40 e8       	ldi	r20, 0x80	; 128
 1d4:	5f e3       	ldi	r21, 0x3F	; 63
 1d6:	6d a1       	ldd	r22, Y+37	; 0x25
 1d8:	7e a1       	ldd	r23, Y+38	; 0x26
 1da:	8f a1       	ldd	r24, Y+39	; 0x27
 1dc:	98 a5       	ldd	r25, Y+40	; 0x28
 1de:	0e 94 c9 03 	call	0x792	; 0x792 <__cmpsf2>
 1e2:	88 23       	and	r24, r24
 1e4:	2c f4       	brge	.+10     	; 0x1f0 <main+0x170>
		__ticks = 1;
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	9a a7       	std	Y+42, r25	; 0x2a
 1ec:	89 a7       	std	Y+41, r24	; 0x29
 1ee:	3e c0       	rjmp	.+124    	; 0x26c <main+0x1ec>
	else if (__tmp > 65535)
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	3f ef       	ldi	r19, 0xFF	; 255
 1f4:	4f e7       	ldi	r20, 0x7F	; 127
 1f6:	57 e4       	ldi	r21, 0x47	; 71
 1f8:	6d a1       	ldd	r22, Y+37	; 0x25
 1fa:	7e a1       	ldd	r23, Y+38	; 0x26
 1fc:	8f a1       	ldd	r24, Y+39	; 0x27
 1fe:	98 a5       	ldd	r25, Y+40	; 0x28
 200:	0e 94 4a 04 	call	0x894	; 0x894 <__gesf2>
 204:	18 16       	cp	r1, r24
 206:	44 f5       	brge	.+80     	; 0x258 <main+0x1d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 208:	20 e0       	ldi	r18, 0x00	; 0
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	40 e2       	ldi	r20, 0x20	; 32
 20e:	51 e4       	ldi	r21, 0x41	; 65
 210:	6b 85       	ldd	r22, Y+11	; 0x0b
 212:	7c 85       	ldd	r23, Y+12	; 0x0c
 214:	8d 85       	ldd	r24, Y+13	; 0x0d
 216:	9e 85       	ldd	r25, Y+14	; 0x0e
 218:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 21c:	dc 01       	movw	r26, r24
 21e:	cb 01       	movw	r24, r22
 220:	bc 01       	movw	r22, r24
 222:	cd 01       	movw	r24, r26
 224:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 228:	dc 01       	movw	r26, r24
 22a:	cb 01       	movw	r24, r22
 22c:	9a a7       	std	Y+42, r25	; 0x2a
 22e:	89 a7       	std	Y+41, r24	; 0x29
		while(__ticks)
 230:	89 a5       	ldd	r24, Y+41	; 0x29
 232:	9a a5       	ldd	r25, Y+42	; 0x2a
 234:	89 2b       	or	r24, r25
 236:	21 f1       	breq	.+72     	; 0x280 <main+0x200>
 238:	80 e9       	ldi	r24, 0x90	; 144
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	9c a7       	std	Y+44, r25	; 0x2c
 23e:	8b a7       	std	Y+43, r24	; 0x2b
 240:	8b a5       	ldd	r24, Y+43	; 0x2b
 242:	9c a5       	ldd	r25, Y+44	; 0x2c
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	f1 f7       	brne	.-4      	; 0x244 <main+0x1c4>
 248:	9c a7       	std	Y+44, r25	; 0x2c
 24a:	8b a7       	std	Y+43, r24	; 0x2b
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 24c:	89 a5       	ldd	r24, Y+41	; 0x29
 24e:	9a a5       	ldd	r25, Y+42	; 0x2a
 250:	01 97       	sbiw	r24, 0x01	; 1
 252:	9a a7       	std	Y+42, r25	; 0x2a
 254:	89 a7       	std	Y+41, r24	; 0x29
 256:	ec cf       	rjmp	.-40     	; 0x230 <main+0x1b0>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 258:	6d a1       	ldd	r22, Y+37	; 0x25
 25a:	7e a1       	ldd	r23, Y+38	; 0x26
 25c:	8f a1       	ldd	r24, Y+39	; 0x27
 25e:	98 a5       	ldd	r25, Y+40	; 0x28
 260:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 264:	dc 01       	movw	r26, r24
 266:	cb 01       	movw	r24, r22
 268:	9a a7       	std	Y+42, r25	; 0x2a
 26a:	89 a7       	std	Y+41, r24	; 0x29
 26c:	89 a5       	ldd	r24, Y+41	; 0x29
 26e:	9a a5       	ldd	r25, Y+42	; 0x2a
 270:	9e a7       	std	Y+46, r25	; 0x2e
 272:	8d a7       	std	Y+45, r24	; 0x2d
 274:	8d a5       	ldd	r24, Y+45	; 0x2d
 276:	9e a5       	ldd	r25, Y+46	; 0x2e
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <main+0x1f8>
 27c:	9e a7       	std	Y+46, r25	; 0x2e
 27e:	8d a7       	std	Y+45, r24	; 0x2d
		_delay_ms(500);
		
		PORTD = 0b01000000;
 280:	8b e2       	ldi	r24, 0x2B	; 43
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	20 e4       	ldi	r18, 0x40	; 64
 286:	fc 01       	movw	r30, r24
 288:	20 83       	st	Z, r18
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	90 e8       	ldi	r25, 0x80	; 128
 28e:	ab e3       	ldi	r26, 0x3B	; 59
 290:	b5 e4       	ldi	r27, 0x45	; 69
 292:	8f 8b       	std	Y+23, r24	; 0x17
 294:	98 8f       	std	Y+24, r25	; 0x18
 296:	a9 8f       	std	Y+25, r26	; 0x19
 298:	ba 8f       	std	Y+26, r27	; 0x1a

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 29a:	20 e0       	ldi	r18, 0x00	; 0
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	4a e7       	ldi	r20, 0x7A	; 122
 2a0:	55 e4       	ldi	r21, 0x45	; 69
 2a2:	6f 89       	ldd	r22, Y+23	; 0x17
 2a4:	78 8d       	ldd	r23, Y+24	; 0x18
 2a6:	89 8d       	ldd	r24, Y+25	; 0x19
 2a8:	9a 8d       	ldd	r25, Y+26	; 0x1a
 2aa:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 2ae:	dc 01       	movw	r26, r24
 2b0:	cb 01       	movw	r24, r22
 2b2:	8b 8f       	std	Y+27, r24	; 0x1b
 2b4:	9c 8f       	std	Y+28, r25	; 0x1c
 2b6:	ad 8f       	std	Y+29, r26	; 0x1d
 2b8:	be 8f       	std	Y+30, r27	; 0x1e
	if (__tmp < 1.0)
 2ba:	20 e0       	ldi	r18, 0x00	; 0
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	40 e8       	ldi	r20, 0x80	; 128
 2c0:	5f e3       	ldi	r21, 0x3F	; 63
 2c2:	6b 8d       	ldd	r22, Y+27	; 0x1b
 2c4:	7c 8d       	ldd	r23, Y+28	; 0x1c
 2c6:	8d 8d       	ldd	r24, Y+29	; 0x1d
 2c8:	9e 8d       	ldd	r25, Y+30	; 0x1e
 2ca:	0e 94 c9 03 	call	0x792	; 0x792 <__cmpsf2>
 2ce:	88 23       	and	r24, r24
 2d0:	2c f4       	brge	.+10     	; 0x2dc <main+0x25c>
		__ticks = 1;
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	98 a3       	std	Y+32, r25	; 0x20
 2d8:	8f 8f       	std	Y+31, r24	; 0x1f
 2da:	3e c0       	rjmp	.+124    	; 0x358 <main+0x2d8>
	else if (__tmp > 65535)
 2dc:	20 e0       	ldi	r18, 0x00	; 0
 2de:	3f ef       	ldi	r19, 0xFF	; 255
 2e0:	4f e7       	ldi	r20, 0x7F	; 127
 2e2:	57 e4       	ldi	r21, 0x47	; 71
 2e4:	6b 8d       	ldd	r22, Y+27	; 0x1b
 2e6:	7c 8d       	ldd	r23, Y+28	; 0x1c
 2e8:	8d 8d       	ldd	r24, Y+29	; 0x1d
 2ea:	9e 8d       	ldd	r25, Y+30	; 0x1e
 2ec:	0e 94 4a 04 	call	0x894	; 0x894 <__gesf2>
 2f0:	18 16       	cp	r1, r24
 2f2:	44 f5       	brge	.+80     	; 0x344 <main+0x2c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2f4:	20 e0       	ldi	r18, 0x00	; 0
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	40 e2       	ldi	r20, 0x20	; 32
 2fa:	51 e4       	ldi	r21, 0x41	; 65
 2fc:	6f 89       	ldd	r22, Y+23	; 0x17
 2fe:	78 8d       	ldd	r23, Y+24	; 0x18
 300:	89 8d       	ldd	r24, Y+25	; 0x19
 302:	9a 8d       	ldd	r25, Y+26	; 0x1a
 304:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 308:	dc 01       	movw	r26, r24
 30a:	cb 01       	movw	r24, r22
 30c:	bc 01       	movw	r22, r24
 30e:	cd 01       	movw	r24, r26
 310:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 314:	dc 01       	movw	r26, r24
 316:	cb 01       	movw	r24, r22
 318:	98 a3       	std	Y+32, r25	; 0x20
 31a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
 31c:	8f 8d       	ldd	r24, Y+31	; 0x1f
 31e:	98 a1       	ldd	r25, Y+32	; 0x20
 320:	89 2b       	or	r24, r25
 322:	21 f1       	breq	.+72     	; 0x36c <main+0x2ec>
 324:	80 e9       	ldi	r24, 0x90	; 144
 326:	91 e0       	ldi	r25, 0x01	; 1
 328:	9a a3       	std	Y+34, r25	; 0x22
 32a:	89 a3       	std	Y+33, r24	; 0x21
 32c:	89 a1       	ldd	r24, Y+33	; 0x21
 32e:	9a a1       	ldd	r25, Y+34	; 0x22
 330:	01 97       	sbiw	r24, 0x01	; 1
 332:	f1 f7       	brne	.-4      	; 0x330 <main+0x2b0>
 334:	9a a3       	std	Y+34, r25	; 0x22
 336:	89 a3       	std	Y+33, r24	; 0x21
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 338:	8f 8d       	ldd	r24, Y+31	; 0x1f
 33a:	98 a1       	ldd	r25, Y+32	; 0x20
 33c:	01 97       	sbiw	r24, 0x01	; 1
 33e:	98 a3       	std	Y+32, r25	; 0x20
 340:	8f 8f       	std	Y+31, r24	; 0x1f
 342:	ec cf       	rjmp	.-40     	; 0x31c <main+0x29c>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 344:	6b 8d       	ldd	r22, Y+27	; 0x1b
 346:	7c 8d       	ldd	r23, Y+28	; 0x1c
 348:	8d 8d       	ldd	r24, Y+29	; 0x1d
 34a:	9e 8d       	ldd	r25, Y+30	; 0x1e
 34c:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 350:	dc 01       	movw	r26, r24
 352:	cb 01       	movw	r24, r22
 354:	98 a3       	std	Y+32, r25	; 0x20
 356:	8f 8f       	std	Y+31, r24	; 0x1f
 358:	8f 8d       	ldd	r24, Y+31	; 0x1f
 35a:	98 a1       	ldd	r25, Y+32	; 0x20
 35c:	9c a3       	std	Y+36, r25	; 0x24
 35e:	8b a3       	std	Y+35, r24	; 0x23
 360:	8b a1       	ldd	r24, Y+35	; 0x23
 362:	9c a1       	ldd	r25, Y+36	; 0x24
 364:	01 97       	sbiw	r24, 0x01	; 1
 366:	f1 f7       	brne	.-4      	; 0x364 <main+0x2e4>
 368:	9c a3       	std	Y+36, r25	; 0x24
 36a:	8b a3       	std	Y+35, r24	; 0x23
		_delay_ms(3000);
		
		while (i<4)
 36c:	89 81       	ldd	r24, Y+1	; 0x01
 36e:	9a 81       	ldd	r25, Y+2	; 0x02
 370:	04 97       	sbiw	r24, 0x04	; 4
 372:	0c f0       	brlt	.+2      	; 0x376 <main+0x2f6>
 374:	4e c1       	rjmp	.+668    	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
			{
				PORTD = 0;
 376:	8b e2       	ldi	r24, 0x2B	; 43
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	fc 01       	movw	r30, r24
 37c:	10 82       	st	Z, r1
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	a6 e9       	ldi	r26, 0x96	; 150
 384:	b3 e4       	ldi	r27, 0x43	; 67
 386:	8b 8b       	std	Y+19, r24	; 0x13
 388:	9c 8b       	std	Y+20, r25	; 0x14
 38a:	ad 8b       	std	Y+21, r26	; 0x15
 38c:	be 8b       	std	Y+22, r27	; 0x16

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 38e:	8e 01       	movw	r16, r28
 390:	0d 5b       	subi	r16, 0xBD	; 189
 392:	1f 4f       	sbci	r17, 0xFF	; 255
 394:	20 e0       	ldi	r18, 0x00	; 0
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	4a e7       	ldi	r20, 0x7A	; 122
 39a:	55 e4       	ldi	r21, 0x45	; 69
 39c:	6b 89       	ldd	r22, Y+19	; 0x13
 39e:	7c 89       	ldd	r23, Y+20	; 0x14
 3a0:	8d 89       	ldd	r24, Y+21	; 0x15
 3a2:	9e 89       	ldd	r25, Y+22	; 0x16
 3a4:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 3a8:	dc 01       	movw	r26, r24
 3aa:	cb 01       	movw	r24, r22
 3ac:	f8 01       	movw	r30, r16
 3ae:	80 83       	st	Z, r24
 3b0:	91 83       	std	Z+1, r25	; 0x01
 3b2:	a2 83       	std	Z+2, r26	; 0x02
 3b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 3b6:	ce 01       	movw	r24, r28
 3b8:	8d 5b       	subi	r24, 0xBD	; 189
 3ba:	9f 4f       	sbci	r25, 0xFF	; 255
 3bc:	20 e0       	ldi	r18, 0x00	; 0
 3be:	30 e0       	ldi	r19, 0x00	; 0
 3c0:	40 e8       	ldi	r20, 0x80	; 128
 3c2:	5f e3       	ldi	r21, 0x3F	; 63
 3c4:	fc 01       	movw	r30, r24
 3c6:	60 81       	ld	r22, Z
 3c8:	71 81       	ldd	r23, Z+1	; 0x01
 3ca:	82 81       	ldd	r24, Z+2	; 0x02
 3cc:	93 81       	ldd	r25, Z+3	; 0x03
 3ce:	0e 94 c9 03 	call	0x792	; 0x792 <__cmpsf2>
 3d2:	88 23       	and	r24, r24
 3d4:	4c f4       	brge	.+18     	; 0x3e8 <main+0x368>
		__ticks = 1;
 3d6:	ce 01       	movw	r24, r28
 3d8:	89 5b       	subi	r24, 0xB9	; 185
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	21 e0       	ldi	r18, 0x01	; 1
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	fc 01       	movw	r30, r24
 3e2:	31 83       	std	Z+1, r19	; 0x01
 3e4:	20 83       	st	Z, r18
 3e6:	69 c0       	rjmp	.+210    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
	else if (__tmp > 65535)
 3e8:	ce 01       	movw	r24, r28
 3ea:	8d 5b       	subi	r24, 0xBD	; 189
 3ec:	9f 4f       	sbci	r25, 0xFF	; 255
 3ee:	20 e0       	ldi	r18, 0x00	; 0
 3f0:	3f ef       	ldi	r19, 0xFF	; 255
 3f2:	4f e7       	ldi	r20, 0x7F	; 127
 3f4:	57 e4       	ldi	r21, 0x47	; 71
 3f6:	fc 01       	movw	r30, r24
 3f8:	60 81       	ld	r22, Z
 3fa:	71 81       	ldd	r23, Z+1	; 0x01
 3fc:	82 81       	ldd	r24, Z+2	; 0x02
 3fe:	93 81       	ldd	r25, Z+3	; 0x03
 400:	0e 94 4a 04 	call	0x894	; 0x894 <__gesf2>
 404:	18 16       	cp	r1, r24
 406:	0c f0       	brlt	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 408:	46 c0       	rjmp	.+140    	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 40a:	20 e0       	ldi	r18, 0x00	; 0
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	40 e2       	ldi	r20, 0x20	; 32
 410:	51 e4       	ldi	r21, 0x41	; 65
 412:	6b 89       	ldd	r22, Y+19	; 0x13
 414:	7c 89       	ldd	r23, Y+20	; 0x14
 416:	8d 89       	ldd	r24, Y+21	; 0x15
 418:	9e 89       	ldd	r25, Y+22	; 0x16
 41a:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 41e:	dc 01       	movw	r26, r24
 420:	cb 01       	movw	r24, r22
 422:	8e 01       	movw	r16, r28
 424:	09 5b       	subi	r16, 0xB9	; 185
 426:	1f 4f       	sbci	r17, 0xFF	; 255
 428:	bc 01       	movw	r22, r24
 42a:	cd 01       	movw	r24, r26
 42c:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 430:	dc 01       	movw	r26, r24
 432:	cb 01       	movw	r24, r22
 434:	f8 01       	movw	r30, r16
 436:	91 83       	std	Z+1, r25	; 0x01
 438:	80 83       	st	Z, r24
		while(__ticks)
 43a:	ce 01       	movw	r24, r28
 43c:	89 5b       	subi	r24, 0xB9	; 185
 43e:	9f 4f       	sbci	r25, 0xFF	; 255
 440:	fc 01       	movw	r30, r24
 442:	80 81       	ld	r24, Z
 444:	91 81       	ldd	r25, Z+1	; 0x01
 446:	89 2b       	or	r24, r25
 448:	09 f4       	brne	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 44a:	51 c0       	rjmp	.+162    	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 44c:	ce 01       	movw	r24, r28
 44e:	87 5b       	subi	r24, 0xB7	; 183
 450:	9f 4f       	sbci	r25, 0xFF	; 255
 452:	20 e9       	ldi	r18, 0x90	; 144
 454:	31 e0       	ldi	r19, 0x01	; 1
 456:	fc 01       	movw	r30, r24
 458:	31 83       	std	Z+1, r19	; 0x01
 45a:	20 83       	st	Z, r18
 45c:	ce 01       	movw	r24, r28
 45e:	87 5b       	subi	r24, 0xB7	; 183
 460:	9f 4f       	sbci	r25, 0xFF	; 255
 462:	fc 01       	movw	r30, r24
 464:	80 81       	ld	r24, Z
 466:	91 81       	ldd	r25, Z+1	; 0x01
 468:	01 97       	sbiw	r24, 0x01	; 1
 46a:	f1 f7       	brne	.-4      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 46c:	9e 01       	movw	r18, r28
 46e:	27 5b       	subi	r18, 0xB7	; 183
 470:	3f 4f       	sbci	r19, 0xFF	; 255
 472:	f9 01       	movw	r30, r18
 474:	91 83       	std	Z+1, r25	; 0x01
 476:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 478:	ce 01       	movw	r24, r28
 47a:	89 5b       	subi	r24, 0xB9	; 185
 47c:	9f 4f       	sbci	r25, 0xFF	; 255
 47e:	9e 01       	movw	r18, r28
 480:	29 5b       	subi	r18, 0xB9	; 185
 482:	3f 4f       	sbci	r19, 0xFF	; 255
 484:	f9 01       	movw	r30, r18
 486:	20 81       	ld	r18, Z
 488:	31 81       	ldd	r19, Z+1	; 0x01
 48a:	21 50       	subi	r18, 0x01	; 1
 48c:	31 09       	sbc	r19, r1
 48e:	fc 01       	movw	r30, r24
 490:	31 83       	std	Z+1, r19	; 0x01
 492:	20 83       	st	Z, r18
 494:	d2 cf       	rjmp	.-92     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 496:	8e 01       	movw	r16, r28
 498:	09 5b       	subi	r16, 0xB9	; 185
 49a:	1f 4f       	sbci	r17, 0xFF	; 255
 49c:	ce 01       	movw	r24, r28
 49e:	8d 5b       	subi	r24, 0xBD	; 189
 4a0:	9f 4f       	sbci	r25, 0xFF	; 255
 4a2:	fc 01       	movw	r30, r24
 4a4:	60 81       	ld	r22, Z
 4a6:	71 81       	ldd	r23, Z+1	; 0x01
 4a8:	82 81       	ldd	r24, Z+2	; 0x02
 4aa:	93 81       	ldd	r25, Z+3	; 0x03
 4ac:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 4b0:	dc 01       	movw	r26, r24
 4b2:	cb 01       	movw	r24, r22
 4b4:	f8 01       	movw	r30, r16
 4b6:	91 83       	std	Z+1, r25	; 0x01
 4b8:	80 83       	st	Z, r24
 4ba:	ce 01       	movw	r24, r28
 4bc:	85 5b       	subi	r24, 0xB5	; 181
 4be:	9f 4f       	sbci	r25, 0xFF	; 255
 4c0:	9e 01       	movw	r18, r28
 4c2:	29 5b       	subi	r18, 0xB9	; 185
 4c4:	3f 4f       	sbci	r19, 0xFF	; 255
 4c6:	f9 01       	movw	r30, r18
 4c8:	20 81       	ld	r18, Z
 4ca:	31 81       	ldd	r19, Z+1	; 0x01
 4cc:	fc 01       	movw	r30, r24
 4ce:	31 83       	std	Z+1, r19	; 0x01
 4d0:	20 83       	st	Z, r18
 4d2:	ce 01       	movw	r24, r28
 4d4:	85 5b       	subi	r24, 0xB5	; 181
 4d6:	9f 4f       	sbci	r25, 0xFF	; 255
 4d8:	fc 01       	movw	r30, r24
 4da:	80 81       	ld	r24, Z
 4dc:	91 81       	ldd	r25, Z+1	; 0x01
 4de:	01 97       	sbiw	r24, 0x01	; 1
 4e0:	f1 f7       	brne	.-4      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4e2:	9e 01       	movw	r18, r28
 4e4:	25 5b       	subi	r18, 0xB5	; 181
 4e6:	3f 4f       	sbci	r19, 0xFF	; 255
 4e8:	f9 01       	movw	r30, r18
 4ea:	91 83       	std	Z+1, r25	; 0x01
 4ec:	80 83       	st	Z, r24
				_delay_ms(300);
				
				PORTD = 0b01000000;
 4ee:	8b e2       	ldi	r24, 0x2B	; 43
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	20 e4       	ldi	r18, 0x40	; 64
 4f4:	fc 01       	movw	r30, r24
 4f6:	20 83       	st	Z, r18
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	a6 e9       	ldi	r26, 0x96	; 150
 4fe:	b3 e4       	ldi	r27, 0x43	; 67
 500:	8b 83       	std	Y+3, r24	; 0x03
 502:	9c 83       	std	Y+4, r25	; 0x04
 504:	ad 83       	std	Y+5, r26	; 0x05
 506:	be 83       	std	Y+6, r27	; 0x06

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 508:	20 e0       	ldi	r18, 0x00	; 0
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	4a e7       	ldi	r20, 0x7A	; 122
 50e:	55 e4       	ldi	r21, 0x45	; 69
 510:	6b 81       	ldd	r22, Y+3	; 0x03
 512:	7c 81       	ldd	r23, Y+4	; 0x04
 514:	8d 81       	ldd	r24, Y+5	; 0x05
 516:	9e 81       	ldd	r25, Y+6	; 0x06
 518:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 51c:	dc 01       	movw	r26, r24
 51e:	cb 01       	movw	r24, r22
 520:	89 af       	std	Y+57, r24	; 0x39
 522:	9a af       	std	Y+58, r25	; 0x3a
 524:	ab af       	std	Y+59, r26	; 0x3b
 526:	bc af       	std	Y+60, r27	; 0x3c
	if (__tmp < 1.0)
 528:	20 e0       	ldi	r18, 0x00	; 0
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	40 e8       	ldi	r20, 0x80	; 128
 52e:	5f e3       	ldi	r21, 0x3F	; 63
 530:	69 ad       	ldd	r22, Y+57	; 0x39
 532:	7a ad       	ldd	r23, Y+58	; 0x3a
 534:	8b ad       	ldd	r24, Y+59	; 0x3b
 536:	9c ad       	ldd	r25, Y+60	; 0x3c
 538:	0e 94 c9 03 	call	0x792	; 0x792 <__cmpsf2>
 53c:	88 23       	and	r24, r24
 53e:	2c f4       	brge	.+10     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
		__ticks = 1;
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	9e af       	std	Y+62, r25	; 0x3e
 546:	8d af       	std	Y+61, r24	; 0x3d
 548:	48 c0       	rjmp	.+144    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
	else if (__tmp > 65535)
 54a:	20 e0       	ldi	r18, 0x00	; 0
 54c:	3f ef       	ldi	r19, 0xFF	; 255
 54e:	4f e7       	ldi	r20, 0x7F	; 127
 550:	57 e4       	ldi	r21, 0x47	; 71
 552:	69 ad       	ldd	r22, Y+57	; 0x39
 554:	7a ad       	ldd	r23, Y+58	; 0x3a
 556:	8b ad       	ldd	r24, Y+59	; 0x3b
 558:	9c ad       	ldd	r25, Y+60	; 0x3c
 55a:	0e 94 4a 04 	call	0x894	; 0x894 <__gesf2>
 55e:	18 16       	cp	r1, r24
 560:	94 f5       	brge	.+100    	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 562:	20 e0       	ldi	r18, 0x00	; 0
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	40 e2       	ldi	r20, 0x20	; 32
 568:	51 e4       	ldi	r21, 0x41	; 65
 56a:	6b 81       	ldd	r22, Y+3	; 0x03
 56c:	7c 81       	ldd	r23, Y+4	; 0x04
 56e:	8d 81       	ldd	r24, Y+5	; 0x05
 570:	9e 81       	ldd	r25, Y+6	; 0x06
 572:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 576:	dc 01       	movw	r26, r24
 578:	cb 01       	movw	r24, r22
 57a:	bc 01       	movw	r22, r24
 57c:	cd 01       	movw	r24, r26
 57e:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 582:	dc 01       	movw	r26, r24
 584:	cb 01       	movw	r24, r22
 586:	9e af       	std	Y+62, r25	; 0x3e
 588:	8d af       	std	Y+61, r24	; 0x3d
		while(__ticks)
 58a:	8d ad       	ldd	r24, Y+61	; 0x3d
 58c:	9e ad       	ldd	r25, Y+62	; 0x3e
 58e:	89 2b       	or	r24, r25
 590:	d1 f1       	breq	.+116    	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 592:	20 e9       	ldi	r18, 0x90	; 144
 594:	31 e0       	ldi	r19, 0x01	; 1
 596:	ce 01       	movw	r24, r28
 598:	cf 96       	adiw	r24, 0x3f	; 63
 59a:	fc 01       	movw	r30, r24
 59c:	31 83       	std	Z+1, r19	; 0x01
 59e:	20 83       	st	Z, r18
 5a0:	ce 01       	movw	r24, r28
 5a2:	cf 96       	adiw	r24, 0x3f	; 63
 5a4:	fc 01       	movw	r30, r24
 5a6:	80 81       	ld	r24, Z
 5a8:	91 81       	ldd	r25, Z+1	; 0x01
 5aa:	01 97       	sbiw	r24, 0x01	; 1
 5ac:	f1 f7       	brne	.-4      	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 5ae:	9e 01       	movw	r18, r28
 5b0:	21 5c       	subi	r18, 0xC1	; 193
 5b2:	3f 4f       	sbci	r19, 0xFF	; 255
 5b4:	f9 01       	movw	r30, r18
 5b6:	91 83       	std	Z+1, r25	; 0x01
 5b8:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 5ba:	8d ad       	ldd	r24, Y+61	; 0x3d
 5bc:	9e ad       	ldd	r25, Y+62	; 0x3e
 5be:	01 97       	sbiw	r24, 0x01	; 1
 5c0:	9e af       	std	Y+62, r25	; 0x3e
 5c2:	8d af       	std	Y+61, r24	; 0x3d
 5c4:	e2 cf       	rjmp	.-60     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 5c6:	69 ad       	ldd	r22, Y+57	; 0x39
 5c8:	7a ad       	ldd	r23, Y+58	; 0x3a
 5ca:	8b ad       	ldd	r24, Y+59	; 0x3b
 5cc:	9c ad       	ldd	r25, Y+60	; 0x3c
 5ce:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 5d2:	dc 01       	movw	r26, r24
 5d4:	cb 01       	movw	r24, r22
 5d6:	9e af       	std	Y+62, r25	; 0x3e
 5d8:	8d af       	std	Y+61, r24	; 0x3d
 5da:	ce 01       	movw	r24, r28
 5dc:	8f 5b       	subi	r24, 0xBF	; 191
 5de:	9f 4f       	sbci	r25, 0xFF	; 255
 5e0:	2d ad       	ldd	r18, Y+61	; 0x3d
 5e2:	3e ad       	ldd	r19, Y+62	; 0x3e
 5e4:	fc 01       	movw	r30, r24
 5e6:	31 83       	std	Z+1, r19	; 0x01
 5e8:	20 83       	st	Z, r18
 5ea:	ce 01       	movw	r24, r28
 5ec:	8f 5b       	subi	r24, 0xBF	; 191
 5ee:	9f 4f       	sbci	r25, 0xFF	; 255
 5f0:	fc 01       	movw	r30, r24
 5f2:	80 81       	ld	r24, Z
 5f4:	91 81       	ldd	r25, Z+1	; 0x01
 5f6:	01 97       	sbiw	r24, 0x01	; 1
 5f8:	f1 f7       	brne	.-4      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5fa:	9e 01       	movw	r18, r28
 5fc:	2f 5b       	subi	r18, 0xBF	; 191
 5fe:	3f 4f       	sbci	r19, 0xFF	; 255
 600:	f9 01       	movw	r30, r18
 602:	91 83       	std	Z+1, r25	; 0x01
 604:	80 83       	st	Z, r24
				_delay_ms(300);
				i++;
 606:	89 81       	ldd	r24, Y+1	; 0x01
 608:	9a 81       	ldd	r25, Y+2	; 0x02
 60a:	01 96       	adiw	r24, 0x01	; 1
 60c:	9a 83       	std	Y+2, r25	; 0x02
 60e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(500);
		
		PORTD = 0b01000000;
		_delay_ms(3000);
		
		while (i<4)
 610:	ad ce       	rjmp	.-678    	; 0x36c <main+0x2ec>
				
				PORTD = 0b01000000;
				_delay_ms(300);
				i++;
			}
		i = 0;
 612:	1a 82       	std	Y+2, r1	; 0x02
 614:	19 82       	std	Y+1, r1	; 0x01
		
		PORTD = 0b00010000;
 616:	8b e2       	ldi	r24, 0x2B	; 43
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	20 e1       	ldi	r18, 0x10	; 16
 61c:	fc 01       	movw	r30, r24
 61e:	20 83       	st	Z, r18
 620:	80 e0       	ldi	r24, 0x00	; 0
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	aa ef       	ldi	r26, 0xFA	; 250
 626:	b3 e4       	ldi	r27, 0x43	; 67
 628:	8f 87       	std	Y+15, r24	; 0x0f
 62a:	98 8b       	std	Y+16, r25	; 0x10
 62c:	a9 8b       	std	Y+17, r26	; 0x11
 62e:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 630:	8e 01       	movw	r16, r28
 632:	03 5b       	subi	r16, 0xB3	; 179
 634:	1f 4f       	sbci	r17, 0xFF	; 255
 636:	20 e0       	ldi	r18, 0x00	; 0
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	4a e7       	ldi	r20, 0x7A	; 122
 63c:	55 e4       	ldi	r21, 0x45	; 69
 63e:	6f 85       	ldd	r22, Y+15	; 0x0f
 640:	78 89       	ldd	r23, Y+16	; 0x10
 642:	89 89       	ldd	r24, Y+17	; 0x11
 644:	9a 89       	ldd	r25, Y+18	; 0x12
 646:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 64a:	dc 01       	movw	r26, r24
 64c:	cb 01       	movw	r24, r22
 64e:	f8 01       	movw	r30, r16
 650:	80 83       	st	Z, r24
 652:	91 83       	std	Z+1, r25	; 0x01
 654:	a2 83       	std	Z+2, r26	; 0x02
 656:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 658:	ce 01       	movw	r24, r28
 65a:	83 5b       	subi	r24, 0xB3	; 179
 65c:	9f 4f       	sbci	r25, 0xFF	; 255
 65e:	20 e0       	ldi	r18, 0x00	; 0
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	40 e8       	ldi	r20, 0x80	; 128
 664:	5f e3       	ldi	r21, 0x3F	; 63
 666:	fc 01       	movw	r30, r24
 668:	60 81       	ld	r22, Z
 66a:	71 81       	ldd	r23, Z+1	; 0x01
 66c:	82 81       	ldd	r24, Z+2	; 0x02
 66e:	93 81       	ldd	r25, Z+3	; 0x03
 670:	0e 94 c9 03 	call	0x792	; 0x792 <__cmpsf2>
 674:	88 23       	and	r24, r24
 676:	4c f4       	brge	.+18     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
		__ticks = 1;
 678:	ce 01       	movw	r24, r28
 67a:	8f 5a       	subi	r24, 0xAF	; 175
 67c:	9f 4f       	sbci	r25, 0xFF	; 255
 67e:	21 e0       	ldi	r18, 0x01	; 1
 680:	30 e0       	ldi	r19, 0x00	; 0
 682:	fc 01       	movw	r30, r24
 684:	31 83       	std	Z+1, r19	; 0x01
 686:	20 83       	st	Z, r18
 688:	69 c0       	rjmp	.+210    	; 0x75c <__LOCK_REGION_LENGTH__+0x35c>
	else if (__tmp > 65535)
 68a:	ce 01       	movw	r24, r28
 68c:	83 5b       	subi	r24, 0xB3	; 179
 68e:	9f 4f       	sbci	r25, 0xFF	; 255
 690:	20 e0       	ldi	r18, 0x00	; 0
 692:	3f ef       	ldi	r19, 0xFF	; 255
 694:	4f e7       	ldi	r20, 0x7F	; 127
 696:	57 e4       	ldi	r21, 0x47	; 71
 698:	fc 01       	movw	r30, r24
 69a:	60 81       	ld	r22, Z
 69c:	71 81       	ldd	r23, Z+1	; 0x01
 69e:	82 81       	ldd	r24, Z+2	; 0x02
 6a0:	93 81       	ldd	r25, Z+3	; 0x03
 6a2:	0e 94 4a 04 	call	0x894	; 0x894 <__gesf2>
 6a6:	18 16       	cp	r1, r24
 6a8:	0c f0       	brlt	.+2      	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 6aa:	46 c0       	rjmp	.+140    	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 6ac:	20 e0       	ldi	r18, 0x00	; 0
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	40 e2       	ldi	r20, 0x20	; 32
 6b2:	51 e4       	ldi	r21, 0x41	; 65
 6b4:	6f 85       	ldd	r22, Y+15	; 0x0f
 6b6:	78 89       	ldd	r23, Y+16	; 0x10
 6b8:	89 89       	ldd	r24, Y+17	; 0x11
 6ba:	9a 89       	ldd	r25, Y+18	; 0x12
 6bc:	0e 94 4f 04 	call	0x89e	; 0x89e <__mulsf3>
 6c0:	dc 01       	movw	r26, r24
 6c2:	cb 01       	movw	r24, r22
 6c4:	8e 01       	movw	r16, r28
 6c6:	0f 5a       	subi	r16, 0xAF	; 175
 6c8:	1f 4f       	sbci	r17, 0xFF	; 255
 6ca:	bc 01       	movw	r22, r24
 6cc:	cd 01       	movw	r24, r26
 6ce:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 6d2:	dc 01       	movw	r26, r24
 6d4:	cb 01       	movw	r24, r22
 6d6:	f8 01       	movw	r30, r16
 6d8:	91 83       	std	Z+1, r25	; 0x01
 6da:	80 83       	st	Z, r24
		while(__ticks)
 6dc:	ce 01       	movw	r24, r28
 6de:	8f 5a       	subi	r24, 0xAF	; 175
 6e0:	9f 4f       	sbci	r25, 0xFF	; 255
 6e2:	fc 01       	movw	r30, r24
 6e4:	80 81       	ld	r24, Z
 6e6:	91 81       	ldd	r25, Z+1	; 0x01
 6e8:	89 2b       	or	r24, r25
 6ea:	09 f4       	brne	.+2      	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6ec:	dd cc       	rjmp	.-1606   	; 0xa8 <main+0x28>
 6ee:	ce 01       	movw	r24, r28
 6f0:	8d 5a       	subi	r24, 0xAD	; 173
 6f2:	9f 4f       	sbci	r25, 0xFF	; 255
 6f4:	20 e9       	ldi	r18, 0x90	; 144
 6f6:	31 e0       	ldi	r19, 0x01	; 1
 6f8:	fc 01       	movw	r30, r24
 6fa:	31 83       	std	Z+1, r19	; 0x01
 6fc:	20 83       	st	Z, r18
 6fe:	ce 01       	movw	r24, r28
 700:	8d 5a       	subi	r24, 0xAD	; 173
 702:	9f 4f       	sbci	r25, 0xFF	; 255
 704:	fc 01       	movw	r30, r24
 706:	80 81       	ld	r24, Z
 708:	91 81       	ldd	r25, Z+1	; 0x01
 70a:	01 97       	sbiw	r24, 0x01	; 1
 70c:	f1 f7       	brne	.-4      	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
 70e:	9e 01       	movw	r18, r28
 710:	2d 5a       	subi	r18, 0xAD	; 173
 712:	3f 4f       	sbci	r19, 0xFF	; 255
 714:	f9 01       	movw	r30, r18
 716:	91 83       	std	Z+1, r25	; 0x01
 718:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 71a:	ce 01       	movw	r24, r28
 71c:	8f 5a       	subi	r24, 0xAF	; 175
 71e:	9f 4f       	sbci	r25, 0xFF	; 255
 720:	9e 01       	movw	r18, r28
 722:	2f 5a       	subi	r18, 0xAF	; 175
 724:	3f 4f       	sbci	r19, 0xFF	; 255
 726:	f9 01       	movw	r30, r18
 728:	20 81       	ld	r18, Z
 72a:	31 81       	ldd	r19, Z+1	; 0x01
 72c:	21 50       	subi	r18, 0x01	; 1
 72e:	31 09       	sbc	r19, r1
 730:	fc 01       	movw	r30, r24
 732:	31 83       	std	Z+1, r19	; 0x01
 734:	20 83       	st	Z, r18
 736:	d2 cf       	rjmp	.-92     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 738:	8e 01       	movw	r16, r28
 73a:	0f 5a       	subi	r16, 0xAF	; 175
 73c:	1f 4f       	sbci	r17, 0xFF	; 255
 73e:	ce 01       	movw	r24, r28
 740:	83 5b       	subi	r24, 0xB3	; 179
 742:	9f 4f       	sbci	r25, 0xFF	; 255
 744:	fc 01       	movw	r30, r24
 746:	60 81       	ld	r22, Z
 748:	71 81       	ldd	r23, Z+1	; 0x01
 74a:	82 81       	ldd	r24, Z+2	; 0x02
 74c:	93 81       	ldd	r25, Z+3	; 0x03
 74e:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 752:	dc 01       	movw	r26, r24
 754:	cb 01       	movw	r24, r22
 756:	f8 01       	movw	r30, r16
 758:	91 83       	std	Z+1, r25	; 0x01
 75a:	80 83       	st	Z, r24
 75c:	ce 01       	movw	r24, r28
 75e:	8b 5a       	subi	r24, 0xAB	; 171
 760:	9f 4f       	sbci	r25, 0xFF	; 255
 762:	9e 01       	movw	r18, r28
 764:	2f 5a       	subi	r18, 0xAF	; 175
 766:	3f 4f       	sbci	r19, 0xFF	; 255
 768:	f9 01       	movw	r30, r18
 76a:	20 81       	ld	r18, Z
 76c:	31 81       	ldd	r19, Z+1	; 0x01
 76e:	fc 01       	movw	r30, r24
 770:	31 83       	std	Z+1, r19	; 0x01
 772:	20 83       	st	Z, r18
 774:	ce 01       	movw	r24, r28
 776:	8b 5a       	subi	r24, 0xAB	; 171
 778:	9f 4f       	sbci	r25, 0xFF	; 255
 77a:	fc 01       	movw	r30, r24
 77c:	80 81       	ld	r24, Z
 77e:	91 81       	ldd	r25, Z+1	; 0x01
 780:	01 97       	sbiw	r24, 0x01	; 1
 782:	f1 f7       	brne	.-4      	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 784:	9e 01       	movw	r18, r28
 786:	2b 5a       	subi	r18, 0xAB	; 171
 788:	3f 4f       	sbci	r19, 0xFF	; 255
 78a:	f9 01       	movw	r30, r18
 78c:	91 83       	std	Z+1, r25	; 0x01
 78e:	80 83       	st	Z, r24

int main(void)
{
    DDRD = 0xFF;
	int i = 0;
	while (1) 
 790:	8b cc       	rjmp	.-1770   	; 0xa8 <main+0x28>

00000792 <__cmpsf2>:
 792:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__fp_cmp>
 796:	08 f4       	brcc	.+2      	; 0x79a <__cmpsf2+0x8>
 798:	81 e0       	ldi	r24, 0x01	; 1
 79a:	08 95       	ret

0000079c <__fixunssfsi>:
 79c:	0e 94 29 04 	call	0x852	; 0x852 <__fp_splitA>
 7a0:	88 f0       	brcs	.+34     	; 0x7c4 <__fixunssfsi+0x28>
 7a2:	9f 57       	subi	r25, 0x7F	; 127
 7a4:	98 f0       	brcs	.+38     	; 0x7cc <__fixunssfsi+0x30>
 7a6:	b9 2f       	mov	r27, r25
 7a8:	99 27       	eor	r25, r25
 7aa:	b7 51       	subi	r27, 0x17	; 23
 7ac:	b0 f0       	brcs	.+44     	; 0x7da <__fixunssfsi+0x3e>
 7ae:	e1 f0       	breq	.+56     	; 0x7e8 <__fixunssfsi+0x4c>
 7b0:	66 0f       	add	r22, r22
 7b2:	77 1f       	adc	r23, r23
 7b4:	88 1f       	adc	r24, r24
 7b6:	99 1f       	adc	r25, r25
 7b8:	1a f0       	brmi	.+6      	; 0x7c0 <__fixunssfsi+0x24>
 7ba:	ba 95       	dec	r27
 7bc:	c9 f7       	brne	.-14     	; 0x7b0 <__fixunssfsi+0x14>
 7be:	14 c0       	rjmp	.+40     	; 0x7e8 <__fixunssfsi+0x4c>
 7c0:	b1 30       	cpi	r27, 0x01	; 1
 7c2:	91 f0       	breq	.+36     	; 0x7e8 <__fixunssfsi+0x4c>
 7c4:	0e 94 43 04 	call	0x886	; 0x886 <__fp_zero>
 7c8:	b1 e0       	ldi	r27, 0x01	; 1
 7ca:	08 95       	ret
 7cc:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_zero>
 7d0:	67 2f       	mov	r22, r23
 7d2:	78 2f       	mov	r23, r24
 7d4:	88 27       	eor	r24, r24
 7d6:	b8 5f       	subi	r27, 0xF8	; 248
 7d8:	39 f0       	breq	.+14     	; 0x7e8 <__fixunssfsi+0x4c>
 7da:	b9 3f       	cpi	r27, 0xF9	; 249
 7dc:	cc f3       	brlt	.-14     	; 0x7d0 <__fixunssfsi+0x34>
 7de:	86 95       	lsr	r24
 7e0:	77 95       	ror	r23
 7e2:	67 95       	ror	r22
 7e4:	b3 95       	inc	r27
 7e6:	d9 f7       	brne	.-10     	; 0x7de <__fixunssfsi+0x42>
 7e8:	3e f4       	brtc	.+14     	; 0x7f8 <__fixunssfsi+0x5c>
 7ea:	90 95       	com	r25
 7ec:	80 95       	com	r24
 7ee:	70 95       	com	r23
 7f0:	61 95       	neg	r22
 7f2:	7f 4f       	sbci	r23, 0xFF	; 255
 7f4:	8f 4f       	sbci	r24, 0xFF	; 255
 7f6:	9f 4f       	sbci	r25, 0xFF	; 255
 7f8:	08 95       	ret

000007fa <__fp_cmp>:
 7fa:	99 0f       	add	r25, r25
 7fc:	00 08       	sbc	r0, r0
 7fe:	55 0f       	add	r21, r21
 800:	aa 0b       	sbc	r26, r26
 802:	e0 e8       	ldi	r30, 0x80	; 128
 804:	fe ef       	ldi	r31, 0xFE	; 254
 806:	16 16       	cp	r1, r22
 808:	17 06       	cpc	r1, r23
 80a:	e8 07       	cpc	r30, r24
 80c:	f9 07       	cpc	r31, r25
 80e:	c0 f0       	brcs	.+48     	; 0x840 <__fp_cmp+0x46>
 810:	12 16       	cp	r1, r18
 812:	13 06       	cpc	r1, r19
 814:	e4 07       	cpc	r30, r20
 816:	f5 07       	cpc	r31, r21
 818:	98 f0       	brcs	.+38     	; 0x840 <__fp_cmp+0x46>
 81a:	62 1b       	sub	r22, r18
 81c:	73 0b       	sbc	r23, r19
 81e:	84 0b       	sbc	r24, r20
 820:	95 0b       	sbc	r25, r21
 822:	39 f4       	brne	.+14     	; 0x832 <__fp_cmp+0x38>
 824:	0a 26       	eor	r0, r26
 826:	61 f0       	breq	.+24     	; 0x840 <__fp_cmp+0x46>
 828:	23 2b       	or	r18, r19
 82a:	24 2b       	or	r18, r20
 82c:	25 2b       	or	r18, r21
 82e:	21 f4       	brne	.+8      	; 0x838 <__fp_cmp+0x3e>
 830:	08 95       	ret
 832:	0a 26       	eor	r0, r26
 834:	09 f4       	brne	.+2      	; 0x838 <__fp_cmp+0x3e>
 836:	a1 40       	sbci	r26, 0x01	; 1
 838:	a6 95       	lsr	r26
 83a:	8f ef       	ldi	r24, 0xFF	; 255
 83c:	81 1d       	adc	r24, r1
 83e:	81 1d       	adc	r24, r1
 840:	08 95       	ret

00000842 <__fp_split3>:
 842:	57 fd       	sbrc	r21, 7
 844:	90 58       	subi	r25, 0x80	; 128
 846:	44 0f       	add	r20, r20
 848:	55 1f       	adc	r21, r21
 84a:	59 f0       	breq	.+22     	; 0x862 <__fp_splitA+0x10>
 84c:	5f 3f       	cpi	r21, 0xFF	; 255
 84e:	71 f0       	breq	.+28     	; 0x86c <__fp_splitA+0x1a>
 850:	47 95       	ror	r20

00000852 <__fp_splitA>:
 852:	88 0f       	add	r24, r24
 854:	97 fb       	bst	r25, 7
 856:	99 1f       	adc	r25, r25
 858:	61 f0       	breq	.+24     	; 0x872 <__fp_splitA+0x20>
 85a:	9f 3f       	cpi	r25, 0xFF	; 255
 85c:	79 f0       	breq	.+30     	; 0x87c <__fp_splitA+0x2a>
 85e:	87 95       	ror	r24
 860:	08 95       	ret
 862:	12 16       	cp	r1, r18
 864:	13 06       	cpc	r1, r19
 866:	14 06       	cpc	r1, r20
 868:	55 1f       	adc	r21, r21
 86a:	f2 cf       	rjmp	.-28     	; 0x850 <__fp_split3+0xe>
 86c:	46 95       	lsr	r20
 86e:	f1 df       	rcall	.-30     	; 0x852 <__fp_splitA>
 870:	08 c0       	rjmp	.+16     	; 0x882 <__fp_splitA+0x30>
 872:	16 16       	cp	r1, r22
 874:	17 06       	cpc	r1, r23
 876:	18 06       	cpc	r1, r24
 878:	99 1f       	adc	r25, r25
 87a:	f1 cf       	rjmp	.-30     	; 0x85e <__fp_splitA+0xc>
 87c:	86 95       	lsr	r24
 87e:	71 05       	cpc	r23, r1
 880:	61 05       	cpc	r22, r1
 882:	08 94       	sec
 884:	08 95       	ret

00000886 <__fp_zero>:
 886:	e8 94       	clt

00000888 <__fp_szero>:
 888:	bb 27       	eor	r27, r27
 88a:	66 27       	eor	r22, r22
 88c:	77 27       	eor	r23, r23
 88e:	cb 01       	movw	r24, r22
 890:	97 f9       	bld	r25, 7
 892:	08 95       	ret

00000894 <__gesf2>:
 894:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__fp_cmp>
 898:	08 f4       	brcc	.+2      	; 0x89c <__gesf2+0x8>
 89a:	8f ef       	ldi	r24, 0xFF	; 255
 89c:	08 95       	ret

0000089e <__mulsf3>:
 89e:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__mulsf3x>
 8a2:	0c 94 d3 04 	jmp	0x9a6	; 0x9a6 <__fp_round>
 8a6:	0e 94 c5 04 	call	0x98a	; 0x98a <__fp_pscA>
 8aa:	38 f0       	brcs	.+14     	; 0x8ba <__mulsf3+0x1c>
 8ac:	0e 94 cc 04 	call	0x998	; 0x998 <__fp_pscB>
 8b0:	20 f0       	brcs	.+8      	; 0x8ba <__mulsf3+0x1c>
 8b2:	95 23       	and	r25, r21
 8b4:	11 f0       	breq	.+4      	; 0x8ba <__mulsf3+0x1c>
 8b6:	0c 94 bc 04 	jmp	0x978	; 0x978 <__fp_inf>
 8ba:	0c 94 c2 04 	jmp	0x984	; 0x984 <__fp_nan>
 8be:	11 24       	eor	r1, r1
 8c0:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>

000008c4 <__mulsf3x>:
 8c4:	0e 94 21 04 	call	0x842	; 0x842 <__fp_split3>
 8c8:	70 f3       	brcs	.-36     	; 0x8a6 <__mulsf3+0x8>

000008ca <__mulsf3_pse>:
 8ca:	95 9f       	mul	r25, r21
 8cc:	c1 f3       	breq	.-16     	; 0x8be <__mulsf3+0x20>
 8ce:	95 0f       	add	r25, r21
 8d0:	50 e0       	ldi	r21, 0x00	; 0
 8d2:	55 1f       	adc	r21, r21
 8d4:	62 9f       	mul	r22, r18
 8d6:	f0 01       	movw	r30, r0
 8d8:	72 9f       	mul	r23, r18
 8da:	bb 27       	eor	r27, r27
 8dc:	f0 0d       	add	r31, r0
 8de:	b1 1d       	adc	r27, r1
 8e0:	63 9f       	mul	r22, r19
 8e2:	aa 27       	eor	r26, r26
 8e4:	f0 0d       	add	r31, r0
 8e6:	b1 1d       	adc	r27, r1
 8e8:	aa 1f       	adc	r26, r26
 8ea:	64 9f       	mul	r22, r20
 8ec:	66 27       	eor	r22, r22
 8ee:	b0 0d       	add	r27, r0
 8f0:	a1 1d       	adc	r26, r1
 8f2:	66 1f       	adc	r22, r22
 8f4:	82 9f       	mul	r24, r18
 8f6:	22 27       	eor	r18, r18
 8f8:	b0 0d       	add	r27, r0
 8fa:	a1 1d       	adc	r26, r1
 8fc:	62 1f       	adc	r22, r18
 8fe:	73 9f       	mul	r23, r19
 900:	b0 0d       	add	r27, r0
 902:	a1 1d       	adc	r26, r1
 904:	62 1f       	adc	r22, r18
 906:	83 9f       	mul	r24, r19
 908:	a0 0d       	add	r26, r0
 90a:	61 1d       	adc	r22, r1
 90c:	22 1f       	adc	r18, r18
 90e:	74 9f       	mul	r23, r20
 910:	33 27       	eor	r19, r19
 912:	a0 0d       	add	r26, r0
 914:	61 1d       	adc	r22, r1
 916:	23 1f       	adc	r18, r19
 918:	84 9f       	mul	r24, r20
 91a:	60 0d       	add	r22, r0
 91c:	21 1d       	adc	r18, r1
 91e:	82 2f       	mov	r24, r18
 920:	76 2f       	mov	r23, r22
 922:	6a 2f       	mov	r22, r26
 924:	11 24       	eor	r1, r1
 926:	9f 57       	subi	r25, 0x7F	; 127
 928:	50 40       	sbci	r21, 0x00	; 0
 92a:	9a f0       	brmi	.+38     	; 0x952 <__stack+0x53>
 92c:	f1 f0       	breq	.+60     	; 0x96a <__stack+0x6b>
 92e:	88 23       	and	r24, r24
 930:	4a f0       	brmi	.+18     	; 0x944 <__stack+0x45>
 932:	ee 0f       	add	r30, r30
 934:	ff 1f       	adc	r31, r31
 936:	bb 1f       	adc	r27, r27
 938:	66 1f       	adc	r22, r22
 93a:	77 1f       	adc	r23, r23
 93c:	88 1f       	adc	r24, r24
 93e:	91 50       	subi	r25, 0x01	; 1
 940:	50 40       	sbci	r21, 0x00	; 0
 942:	a9 f7       	brne	.-22     	; 0x92e <__stack+0x2f>
 944:	9e 3f       	cpi	r25, 0xFE	; 254
 946:	51 05       	cpc	r21, r1
 948:	80 f0       	brcs	.+32     	; 0x96a <__stack+0x6b>
 94a:	0c 94 bc 04 	jmp	0x978	; 0x978 <__fp_inf>
 94e:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>
 952:	5f 3f       	cpi	r21, 0xFF	; 255
 954:	e4 f3       	brlt	.-8      	; 0x94e <__stack+0x4f>
 956:	98 3e       	cpi	r25, 0xE8	; 232
 958:	d4 f3       	brlt	.-12     	; 0x94e <__stack+0x4f>
 95a:	86 95       	lsr	r24
 95c:	77 95       	ror	r23
 95e:	67 95       	ror	r22
 960:	b7 95       	ror	r27
 962:	f7 95       	ror	r31
 964:	e7 95       	ror	r30
 966:	9f 5f       	subi	r25, 0xFF	; 255
 968:	c1 f7       	brne	.-16     	; 0x95a <__stack+0x5b>
 96a:	fe 2b       	or	r31, r30
 96c:	88 0f       	add	r24, r24
 96e:	91 1d       	adc	r25, r1
 970:	96 95       	lsr	r25
 972:	87 95       	ror	r24
 974:	97 f9       	bld	r25, 7
 976:	08 95       	ret

00000978 <__fp_inf>:
 978:	97 f9       	bld	r25, 7
 97a:	9f 67       	ori	r25, 0x7F	; 127
 97c:	80 e8       	ldi	r24, 0x80	; 128
 97e:	70 e0       	ldi	r23, 0x00	; 0
 980:	60 e0       	ldi	r22, 0x00	; 0
 982:	08 95       	ret

00000984 <__fp_nan>:
 984:	9f ef       	ldi	r25, 0xFF	; 255
 986:	80 ec       	ldi	r24, 0xC0	; 192
 988:	08 95       	ret

0000098a <__fp_pscA>:
 98a:	00 24       	eor	r0, r0
 98c:	0a 94       	dec	r0
 98e:	16 16       	cp	r1, r22
 990:	17 06       	cpc	r1, r23
 992:	18 06       	cpc	r1, r24
 994:	09 06       	cpc	r0, r25
 996:	08 95       	ret

00000998 <__fp_pscB>:
 998:	00 24       	eor	r0, r0
 99a:	0a 94       	dec	r0
 99c:	12 16       	cp	r1, r18
 99e:	13 06       	cpc	r1, r19
 9a0:	14 06       	cpc	r1, r20
 9a2:	05 06       	cpc	r0, r21
 9a4:	08 95       	ret

000009a6 <__fp_round>:
 9a6:	09 2e       	mov	r0, r25
 9a8:	03 94       	inc	r0
 9aa:	00 0c       	add	r0, r0
 9ac:	11 f4       	brne	.+4      	; 0x9b2 <__fp_round+0xc>
 9ae:	88 23       	and	r24, r24
 9b0:	52 f0       	brmi	.+20     	; 0x9c6 <__fp_round+0x20>
 9b2:	bb 0f       	add	r27, r27
 9b4:	40 f4       	brcc	.+16     	; 0x9c6 <__fp_round+0x20>
 9b6:	bf 2b       	or	r27, r31
 9b8:	11 f4       	brne	.+4      	; 0x9be <__fp_round+0x18>
 9ba:	60 ff       	sbrs	r22, 0
 9bc:	04 c0       	rjmp	.+8      	; 0x9c6 <__fp_round+0x20>
 9be:	6f 5f       	subi	r22, 0xFF	; 255
 9c0:	7f 4f       	sbci	r23, 0xFF	; 255
 9c2:	8f 4f       	sbci	r24, 0xFF	; 255
 9c4:	9f 4f       	sbci	r25, 0xFF	; 255
 9c6:	08 95       	ret

000009c8 <_exit>:
 9c8:	f8 94       	cli

000009ca <__stop_program>:
 9ca:	ff cf       	rjmp	.-2      	; 0x9ca <__stop_program>
